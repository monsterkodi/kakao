###
    000   000  000  000   000
    000 0 000  000  0000  000
    000000000  000  000 0 000
    000   000  000  000  0000
    00     00  000  000   000
    
    handles window event from the main process
    handles the titlebar and its menu
    calls methods on its delegate
###

use ./dom
use ./elem
use ./post
use ./keyinfo
use ./title

{ $, stopEvent } = dom

class WinDelegate
    
    onWindowCreated:        (win)           -> log "win #{win.id}"
    onWindowAnimationTick:  (win, tickInfo) -> #log("onWindowAnimationTick" tickInfo) if tickInfo.fps < 20
    onWindowResize:         (win, event)    -> #log "onWindowResize" event
    onWindowFocus:          (win)           -> #log "onWindowFocus"
    onWindowBlur:           (win)           -> #log "onWindowBlur"
    onWindowKeyDown:        (win, keyInfo)  -> log "key #{keyInfo.combo}" if not empty keyInfo.combo
    onWindowKeyUp:          (win, keyInfo)  -> #log "up  " keyInfo.combo
    
function Win

    @: (@delegate) ->
        
        @delegate ?= new WinDelegate
        
        post.on 'menuAction'   @onMenuAction
        post.on 'window.blur'  @onWindowBlur
        post.on 'window.focus' @onWindowFocus
        
        menuIcon = @delegate.menuIcon ? kakao.bundle.img 'menu.png'
        menuNoon = @delegate.menuNoon ? kakao.bundle.res 'menu.noon'
        
        log 'menuIcon' menuIcon
        log 'menuNoon' menuNoon
        
        window.titlebar = new title icon:menuIcon, menu:menuNoon
        
        window.addEventListener 'keydown' @onKeyDown
        window.addEventListener 'keyup'   @onKeyUp
        window.addEventListener 'resize'  @onResize
        
        window.requestAnimationFrame @animate
        
        main =$ 'main'
        main.focus()
        
        kakao.request('window.id').then (@id) =>
            # elem class:'test' text:"○○" parent:main
            elem class:'test' text:"#{id}" parent:main
            
            @delegate?.onWindowCreated? @
            kakao.send 'win.setMinSize' 250 125
            # kakao.request('fs.write' kakao.bundle.app('test.txt'), "hello from #{@id}!").then (ok) -> log 'wrote' ok
        
    animate: =>
        
        window.requestAnimationFrame @animate
                
        now = window.performance.now()
        delta = (now - @lastAnimationTime)
        @lastAnimationTime = now
        
        fps = parseInt 1000/delta
        if fps < 20
            kakao.send "window.framerateDrop" fps
            
        @delegate?.onWindowAnimationTick? @, delta:delta, fps:fps, time:now
                                    
    onResize: (event) => @delegate?.onWindowResize? @, event
    onWindowFocus:    => @delegate?.onWindowFocus?  @
    onWindowBlur:     => @delegate?.onWindowBlur?   @
    
    # 00     00  00000000  000   000  000   000   0000000    0000000  000000000  000   0000000   000   000  
    # 000   000  000       0000  000  000   000  000   000  000          000     000  000   000  0000  000  
    # 000000000  0000000   000 0 000  000   000  000000000  000          000     000  000   000  000 0 000  
    # 000 0 000  000       000  0000  000   000  000   000  000          000     000  000   000  000  0000  
    # 000   000  00000000  000   000   0000000   000   000   0000000     000     000   0000000   000   000  
    
    onMenuAction: (action) =>
        
        return if @delegate?.onWindowMenuAction? @, action
            
        switch action.toLowerCase()
            'focus next'     ➜ kakao.send 'window.focusNext'
            'focus previous' ➜ kakao.send 'window.focusPrev'
            'new window'     ➜ kakao.send 'window.new'
            'maximize'       ➜ kakao.send 'window.maximize'
            'minimize'       ➜ kakao.send 'window.minimize'
            'screenshot'     ➜ kakao.send 'window.snapshot'
            'close'          ➜ kakao.send 'window.close'
            'reload'         ➜ kakao.send 'window.reload'
            'quit'           ➜ kakao.send 'app.quit'
            'open ...'       ➜ kakao.send 'window.new' 'ko.html'
            'about'          
                if window.aboutImage
                    kakao.send 'window.new' 'about.html' "window.aboutImage = \"#{window.aboutImage}\";"
                else
                    kakao.send 'window.new' 'about.html'
        0
        
    # 000   000  00000000  000   000
    # 000  000   000        000 000
    # 0000000    0000000     00000
    # 000  000   000          000
    # 000   000  00000000     000
    
    onKeyDown: (event) =>

        info = keyinfo.forEvent event
        info.event = event
        
        stopEvent event
        
        if 'unhandled' == window.titlebar.handleKeyInfo info
            
            @delegate?.onWindowKeyDown? @, info
                
    onKeyUp: (event) =>
        
        info = keyinfo.forEvent event
        info.event = event
        
        @delegate?.onWindowKeyUp? @, info

export Win
