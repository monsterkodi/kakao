###
000000000   0000000   0000000
   000     000   000  000   000
   000     000000000  0000000
   000     000   000  000   000
   000     000   000  0000000
###

use ../../kxk ▪ elem post slash tooltip
use ../tools  ◆ File Git Projects
use ../editor ◆ Render Syntax

class Tab

    @: (@tabs, koreTab) ->

        for k,v of koreTab
            @[k] = v

        @div = elem class: 'tab app-drag-region'
        @tabs.div.appendChild @div
        
        @update()
        
        if @isPrj()
            post.on 'gitStatus' @onGitStatus
            Git.status @path
        
    isPrj: -> @type == 'prj'
            
    # foreignChanges: (lineChanges) ->

        # @foreign ?= []
        # @foreign.push lineChanges
        # @update()

    #  0000000   0000000   000   000  00000000
    # 000       000   000  000   000  000
    # 0000000   000000000   000 000   0000000
    #      000  000   000     000     000
    # 0000000   000   000      0      00000000

    saveChanges: ->

        if @state

            log 'Tab.saveChanges' @state
            
            # if @foreign?.length
                # for changes in @foreign
                    # for change in changes
                        # switch change.change
                            # 'changed'  ➜ @state.state = @state.state.changeLine change.doIndex, change.after
                            # 'inserted' ➜ @state.state = @state.state.insertLine change.doIndex, change.after
                            # 'deleted'  ➜ @state.state = @state.state.deleteLine change.doIndex

            if @state.state
                
                File.save @state.file, @state.state.text(), (file) =>
                    error "tab.saveChanges failed" if not file
                    # @revert()
            else
                error 'tab.saveChanges -- nothing to save?'
        # else
            # post.emit 'saveChanges'

    # 000   000  00000000   0000000     0000000   000000000  00000000
    # 000   000  000   000  000   000  000   000     000     000
    # 000   000  00000000   000   000  000000000     000     0000000
    # 000   000  000        000   000  000   000     000     000
    #  0000000   000        0000000    000   000     000     00000000

    update: ->

        @div.innerHTML = ''
        @div.classList.toggle 'dirty'  @dirty?
        @div.classList.toggle 'active' @active?
        
        sep = '●'
        sep = '' if @isPrj()
        @dot = elem 'span' class:'dot' text:sep
        @div.appendChild @dot

        diss = Syntax.dissForTextAndSyntax slash.file(@path), 'ko'
        
        if not prefs.get 'tabs|extension'
            if valid slash.ext @path
                diss.pop()
                diss.pop()
        
        name = elem 'span' class:'name app-drag-region' html:Render.line diss, charWidth:0
        @div.appendChild name
        
        if @isPrj()
            @div.classList.add 'prj'
        else
            html = ''
            if @pinned
                html = """
                <svg width="100%" height="100%" viewBox="0 0 30 30" fill="transparent">
                    <circle cx="15" cy="12" r="4" />
                    <line x1="15" y1="16"  x2="15"  y2="22" stroke-linecap="round"></line>
                </svg>
                """
            else if @tmp
                html = """
                <svg width="100%" height="100%" viewBox="0 0 30 30">
                    <circle cx="15" cy="9"  r="2" />
                    <circle cx="15" cy="15" r="2" />
                    <circle cx="15" cy="21" r="2" />
                </svg>
                """
            
            @div.appendChild elem 'span' class:'tabstate app-drag-region' html:html, click:@togglePinned

        @tooltip = new tooltip elem:name, bound:@div, html:@tooltipHtml, x:-2

        if @isPrj()
            if Git.statusCache[@path]
                @onGitStatus Git.statusCache[@path]
            if @collapsed
                log 'collapsed prj' @path
                # for i in 0...@hiddenPrjFiles.length
                    # dot = elem 'span' class:'prjdot' text:'●'
                    # @div.appendChild dot
                    # if @hiddenPrjFiles[i] == window.textEditor.currentFile
                        # dot.classList.add 'activeTab'
        else if @dirty?
            @div.appendChild elem 'span' class:'dot' text:'●'
        @
        
    tooltipHtml: => 
                
        if @path?
            
            diss = Syntax.dissForTextAndSyntax slash.tilde(@path), 'ko'
            html = Render.line diss, wrapSpan:'tooltip-path'
            
            if @isPrj() and numFiles = Projects.files(@path).length
                html += Render.line Syntax.dissForTextAndSyntax("#{numFiles} files" 'git'), wrapSpan:'tooltip-line'
                Git.status @path
                
        html

    #  0000000   000  000000000   0000000  000000000   0000000   000000000  000   000   0000000  
    # 000        000     000     000          000     000   000     000     000   000  000       
    # 000  0000  000     000     0000000      000     000000000     000     000   000  0000000   
    # 000   000  000     000          000     000     000   000     000     000   000       000  
    #  0000000   000     000     0000000      000     000   000     000      0000000   0000000   
    
    onGitStatus: (status) => 
        
        return if status.gitDir != @path
        
        if @tooltip?.div?
            if status.deleted.length ➜ @tooltip.div.innerHTML += Render.line Syntax.dissForTextAndSyntax("▲ #{status.deleted.length} deleted" 'git'), wrapSpan:'tooltip-line' 
            if status.added.length   ➜ @tooltip.div.innerHTML += Render.line Syntax.dissForTextAndSyntax("■ #{status.added.length} added"     'git'), wrapSpan:'tooltip-line' 
            if status.changed.length ➜ @tooltip.div.innerHTML += Render.line Syntax.dissForTextAndSyntax("● #{status.changed.length} changed" 'git'), wrapSpan:'tooltip-line' 
        
        t = ''
        if status.deleted.length ➜ t += '<div class="git-status-icon git-deleted deleted-triangle">▲</div>'
        if status.added.length   ➜ t += '<div class="git-status-icon git-added       added-square">■</div>'
        if status.changed.length ➜ t += '<div class="git-status-icon git-changed   changed-circle">●</div>'
        @dot.innerHTML = t
        
    index: -> @tabs.tabs.indexOf @

    close: ->

        log 'Tab.close' @dirty
        
        if @dirty
            @saveChanges()

        @div.remove()
        @tooltip?.del()
        post.emit 'tabClosed' @path
        @

    togglePinned: =>
        
        if tab = @tabs.koreTabForPath @path
            if tab.tmp
                delete tab.tmp
            else
                if tab.pinned
                    delete tab.pinned
                else
                    tab.pinned = true
            @tabs.update()
        @

    # 00000000   00000000  000   000  00000000  00000000   000000000
    # 000   000  000       000   000  000       000   000     000
    # 0000000    0000000    000 000   0000000   0000000       000
    # 000   000  000          000     000       000   000     000
    # 000   000  00000000      0      00000000  000   000     000

    revert: ->

        # delete @foreign
        delete @state
        delete @dirty
        # @update()
        @tabs.update()
        @

export Tab
