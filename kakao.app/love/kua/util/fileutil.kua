###
      ████████  ███  ███      ████████  ███   ███  █████████  ███  ███      
      ███       ███  ███      ███       ███   ███     ███     ███  ███      
      ██████    ███  ███      ███████   ███   ███     ███     ███  ███      
      ███       ███  ███      ███       ███   ███     ███     ███  ███      
      ███       ███  ███████  ████████   ███████      ███     ███  ███████  
###

# use ../../kxk ▪ post slash
# use ../../kxk ◆ nfs salter

class fileutil

    # move these to some config! 𝖘𝜏⊚𝔭 ⫙⊚⩗𝚒∩𝚐 𝜏𝖍𝚒𝖘 𝕒ɼ𝕒⊚𝓊∩⫐, 𝒹𝕒⫙⫙𝚒𝜏!
    @indexFileExtensions:  [ 'kode' 'mm' 'zig' 'cc' 'c' 'h' 'hpp' 'cpp' 'nim' 'kim' 'lua' 'kua'] 
    @dotFileExtensions:    [ 'bashrc' 'bash_history' 'gitconfig' 'gitignore_global' 'lesshst' 'npmrc' 'nvimrc' 'profile' 'zprofile' 'zsh_history' 'zshrc' ]
    @sourceFileExtensions: fileutil.indexFileExtensions.concat(fileutil.dotFileExtensions [ 'ts' 'js' 'mjs' 'swift' 'styl' 'css' 'pug' 'html' 'md' 'noon' 'json' 'txt' 'log' 'sh' 'fish' 'py' 'frag' 'vert' 'config' 'toml' 'conf' 'gitignore' 'plist' ]) 
    @imageExtensions:      ['png' 'jpg' 'jpeg' 'gif' 'tiff' 'pxm' 'icns' 'webp']
    
    #  ███████   ███████   ███   ███  ███   ███  █████████  ████████  ████████ 
    # ███       ███   ███  ███   ███  ████  ███     ███     ███       ███   ███
    # ███       ███   ███  ███   ███  ███ █ ███     ███     ███████   ███████  
    # ███       ███   ███  ███   ███  ███  ████     ███     ███       ███   ███
    #  ███████   ███████    ███████   ███   ███     ███     ████████  ███   ███

    @counterparts: # todo: move this to a config file?
        mm:      ['h']
        cpp:     ['hpp' 'h']
        cc:      ['hpp' 'h']
        h:       ['cpp' 'c' 'mm']
        hpp:     ['cpp' 'c']
        coffee:  ['js' 'mjs']
        kode:    ['js' 'mjs']
        kim:     ['nim']
        nim:     ['kim']
        kua:     ['lua']
        lua:     ['kua']
        js:      ['coffee' 'kode']
        mjs:     ['coffee' 'kode']
        pug:     ['html']
        noon:    ['json']
        json:    ['noon']
        html:    ['pug']
        css:     ['styl']
        styl:    ['css']
    
    #  ███████  ███   ███   ███████   ████████ 
    # ███       ███ █ ███  ███   ███  ███   ███
    # ███████   █████████  █████████  ████████ 
    #      ███  ███   ███  ███   ███  ███      
    # ███████   ██     ██  ███   ███  ███      

    @swapLastDir: path from to ->

        lastIndex = path.rfind "/#{from}/"
        if lastIndex >= 1
            newp = kstr.slice(path 1 lastIndex) & to & kstr.slice(path lastIndex+("/#{from}").len)
            log "swapLastDir" path, newp
            ⮐  newp
        path
        
    # █████████  ████████    ███████    ███████  ███   ███
    #    ███     ███   ███  ███   ███  ███       ███   ███
    #    ███     ███████    █████████  ███████   █████████
    #    ███     ███   ███  ███   ███       ███  ███   ███
    #    ███     ███   ███  ███   ███  ███████   ███   ███

    @trash: path ->
    
        nfs.trash path
        
    #  ███████  ███       ███████    ███████   ███████
    # ███       ███      ███   ███  ███       ███     
    # ███       ███      █████████  ███████   ███████ 
    # ███       ███      ███   ███       ███       ███
    #  ███████  ███████  ███   ███  ███████   ███████ 

    @class: name ->
    
        currentDir = slash.dir ked_session∙get('editor▸file')
        currentDir ?= process.cwd()
        file       = slash.path currentDir "#{name}.kode"
        header     = salter(name prepend:'    ')
        nfs.write file """
            ###
            #{header}
            ###
            
            function #{name}
            
                @: ->
                
            export #{name}
            
            """ 
            
        post∙emit 'file.open' file 6 'eol'
        
    # ███   ███  ████████  ███   ███        ████████   ███████   ███      ███████    ████████  ████████ 
    # ████  ███  ███       ███ █ ███        ███       ███   ███  ███      ███   ███  ███       ███   ███
    # ███ █ ███  ███████   █████████        ██████    ███   ███  ███      ███   ███  ███████   ███████  
    # ███  ████  ███       ███   ███        ███       ███   ███  ███      ███   ███  ███       ███   ███
    # ███   ███  ████████  ██     ██        ███        ███████   ███████  ███████    ████████  ███   ███

    @newFolder: parent ->
    
        dir = slash.path parent 'new_folder'
        res = nfs.mkdir dir
        if res == dir
            post∙emit 'redraw'
        
    # ████████   ████████  ███   ███   ███████   ██     ██  ████████
    # ███   ███  ███       ████  ███  ███   ███  ███   ███  ███     
    # ███████    ███████   ███ █ ███  █████████  █████████  ███████ 
    # ███   ███  ███       ███  ████  ███   ███  ███ █ ███  ███     
    # ███   ███  ████████  ███   ███  ███   ███  ███   ███  ████████

    @rename: oldPath newPath ->
        
        ⮐  if oldPath == newPath
        
        res = nfs.move oldPath newPath
        if res != newPath
            error "rename failed! #{res}"
        
post∙on 'file.trash'      fileutil.trash
post∙on 'file.class'      fileutil.class
post∙on 'file.rename'     fileutil.rename
post∙on 'file.new_folder' fileutil.newFolder

⮐  fileutil
