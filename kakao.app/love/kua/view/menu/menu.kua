###
    ██     ██  ████████  ███   ███  ███   ███  
    ███   ███  ███       ████  ███  ███   ███  
    █████████  ███████   ███ █ ███  ███   ███  
    ███ █ ███  ███       ███  ████  ███   ███  
    ███   ███  ████████  ███   ███   ███████   

    simple list of actions with optional greet
###

# use ../../../kxk    ▪ kstr slash post noon
# use ../../util      ◆ frecent
# use ../../edit/tool ◆ belt
# use ../../theme     ◆ theme 
# use ../screen       ◆ cells 
use  view.menu.inputchoice
use  view.menu.greet

class menu extends inputchoice

    @: screen name='menu' ->
    
        inputchoice.init @, screen, name
        
        @greet = greet @screen
        
    #  0000000   00000000   00000000    0000000   000   000   0000000   00000000  
    # 000   000  000   000  000   000  000   000  0000  000  000        000       
    # 000000000  0000000    0000000    000000000  000 0 000  000  0000  0000000   
    # 000   000  000   000  000   000  000   000  000  0000  000   000  000       
    # 000   000  000   000  000   000  000   000  000   000   0000000   00000000  
    
    arrange: ->

        w = @width+2+1 # 2 for frame, 1 for right 
        c = @choices∙numChoices()
        
        ih = if @inputIsActive() ➜  2 ➜ 0
        iz = math.max 0 ih - 1
        
        h = c + 2 + ih
        scy = math.floor @screen.rows/2
        y  = math.floor scy-(c+2)/2
        y -= ih
        
        scx = math.floor @screen.cols/2
        x  = math.floor scx - w/2
        
        (gw gh) = belt.cellSize @greet.header
            
        gx = math.floor(scx-gw/2)
        gy = math.max(1 math.floor(y-gh-1+ih))
        
        @greet∙layout    gx    gy
        @input∙layout    x+2   y+1      w-4  iz
        @choices∙layout  x+1   y+1+ih   w-2  c
        @cells∙layout    x     y        w    h

    #  0000000  000   000   0000000   000   000
    # 000       000   000  000   000  000 0 000
    # 0000000   000000000  000   000  000000000
    #      000  000   000  000   000  000   000
    # 0000000   000   000   0000000   00     00

    show: greet=false ->
        
        if greet
            @greet∙show() 
        
        items = belt.linesForText """
            recent ...
            open ...
            new
            help
            quit
            """
        
        if not greet
            items∙splice items.len-2 0 'about' 
            
        # if empty ked_session∙recentFiles()
        #     items∙splice items∙find('recent ...') 1 
        
        items = items∙map((i) -> ' ' & i) # padding for  
            
        ccol = floor(@screen.cols/2) - 5

        @width = belt.widthOfLines items
        
        @input∙set ''
        @input∙hide()
        @choices∙set items
        @choices∙select 1
        @choices.state∙setView [1 1]
        
        inputchoice.show @
        
    # 00000000   00000000   0000000  00000000  000   000  000000000  
    # 000   000  000       000       000       0000  000     000     
    # 0000000    0000000   000       0000000   000 0 000     000     
    # 000   000  000       000       000       000  0000     000     
    # 000   000  00000000   0000000  00000000  000   000     000     
    
    showRecent: ->
                
         #recent = frecent∙list 'file'
         #
         #@choices∙set recent
         #
         #post∙emit 'quicky.files' recent
        
    hide: ->
    
        @greet∙hide()
        inputchoice.hide @
    
    #  0000000   00000000   00000000   000      000   000  
    # 000   000  000   000  000   000  000       000 000   
    # 000000000  00000000   00000000   000        00000    
    # 000   000  000        000        000         000     
    # 000   000  000        000        0000000     000     
    
    applyChoice: choice ->
        
        # log "applyChoice ▸#{choice}◂"
        
        switch choice
            'new'        ➜ @hide(); post∙emit 'file.new'
            'about'      ➜ @show true # reopen with greeting header
            'quit'       ➜ @greet∙hide(); post∙emit 'quit'                    
            'open ...'   ➜ post∙emit 'browse.dir' slash.cwd()
            'recent ...' ➜ @showRecent()
            'help'       ➜ @hide(); post∙emit 'file.open' slash.path(slash.cwd() '../../../../kode/ked/help.md')
            
        true
        
    onWheel: ->
                            
    # 0000000    00000000    0000000   000   000
    # 000   000  000   000  000   000  000 0 000
    # 000   000  0000000    000000000  000000000
    # 000   000  000   000  000   000  000   000
    # 0000000    000   000  000   000  00     00

    draw: ->

        ⮐  if @hidden()
        
        @arrange()
        @greet∙draw()
        @drawFrame()
        @drawChoices()

⮐  menu
