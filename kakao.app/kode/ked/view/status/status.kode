###
     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  
    ‚ñà‚ñà‚ñà          ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà       
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   
         ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà  
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   

    the row above the fileeditor
    displays currently edited file and editor state information 
###

use ../../../kxk    ‚ñ™ post slash kstr kseg
use ../../../kxk    ‚óÜ nfs
use ../../edit/tool ‚óÜ belt
use ../../edit/mode ‚óÜ filepos
use ../../theme     ‚óÜ color theme
use ../base         ‚óÜ view crumbs bubble 
use                 ‚óÜ statusfile

function fileposSyntax

    @: ->
    
        @color = {}
        @color.number = theme.status.filepos
        @color.symbol = color.darken @color.number 0.8
        
    getColor: x y ch =>
    
        switch ch
            'ÔÉÖ' ‚ûú @color.symbol
                ‚ûú @color.number

function status extends view

    @: @screen @editor ->
        
        super @screen 'status'
        
        @state    = @editor.state
        @gutter   = 4
        @file     = ''
        @drawTime = ''
        @fileposl = []
        @fileoffs = []
        
        @pointerType = 'pointer'
        
        @setColor 'gutter' theme.gutter.bg
           
        @crumbs     = new crumbs     @screen 'status_crumbs'
        @statusfile = new statusfile @screen 'status_file'
        @filepos    = new bubble     @screen "status_filepos"
        
        @crumbs.setColor 'empty_left'  @color.gutter
        @crumbs.setColor 'empty_right' theme.status.empty
        
        @filepos.setColor 'empty' theme.status.empty
        @filepos.syntax = new fileposSyntax
        
        @crumbs.on     'action' @onCrumbsAction
        @statusfile.on 'action' @onFileAction
        @filepos.on    'action' @onFileposAction
        
        post.on 'status.filepos' @onStatusFilepos
        
    onStatusFilepos: @fileposl @fileoffs => 
    
        if @fileposl.length > 1
            @filepos.set tilde:"#{@fileoffs ? @fileposl.length-@fileoffs-1 : ''}ÔÉÖ#{@fileposl.length-1}"
        else
            @filepos.set null 
            
    onFileposAction: action item =>
    
        switch action
            'leave' ‚ûú log 'hide filepos files?'
            'click' ‚ûú post.emit 'filepos.swapPrevious'
            'enter'
                if filepos.fileposl.length > 1
                    files = filepos.fileposl.map (fp) -> fp[0]
                    files = files.reverse()
                    files.shift() if filepos.offset == 0
                    post.emit 'droop.show' files:files pos:[@filepos.cells.x+int(@filepos.cells.cols/2) @filepos.cells.y+1]
        
    onCrumbsAction: action path event =>
    
        switch action
        
            'click'  
                if valid event.mods
                    post.emit 'dircol.root' path
                else
                    post.emit 'browse.dir' path
                    
            'enter'
                @droopCrumb path event
                
    droopCrumb: path crumb ‚óã=>
    
        path = slash.untilde path
        files =‚óã nfs.list path recursive:false
        x = @crumbs.cells.x+int((crumb.cols[1]+crumb.cols[0])/2)
        post.emit 'droop.show' files:files pos:[x @crumbs.cells.y+1]

    onFileAction: action file =>
        
        switch action
            'click' ‚ûú post.emit 'browse.dir' slash.dir(file) file
            
    # 00     00   0000000   000   000   0000000  00000000  
    # 000   000  000   000  000   000  000       000       
    # 000000000  000   000  000   000  0000000   0000000   
    # 000 0 000  000   000  000   000       000  000       
    # 000   000   0000000    0000000   0000000   00000000  
    
    onMouse: event =>

        cret = @crumbs    .onMouse event
        sret = @statusfile.onMouse event
        fret = @filepos   .onMouse event
        
        ‚Æê  sret or cret or fret if sret or cret or fret

        super event
        
        [col row] = @eventPos event
        
        post.emit 'pointer' @pointerType if @hover
        
        switch event.type 
            
            'press' 
                
                if @hover 
                    if 0 <= col < 4
                        post.emit 'dircol.toggle'
                        ‚Æê  redraw:true
                    if @cells.cols-12 <= col < @cells.cols
                        post.emit 'funcol.toggle'
                        ‚Æê  redraw:true
                    
        @hover
        
    #  0000000  00000000  000000000        00000000  000  000      00000000  
    # 000       000          000           000       000  000      000       
    # 0000000   0000000      000           000000    000  000      0000000   
    #      000  000          000           000       000  000      000       
    # 0000000   00000000     000           000       000  0000000  00000000  
    
    setFile: @file => 
        
        ‚Æê  if empty @file
        @crumbs.set slash.dir(@file)
        @statusfile.set @file
        
    # ‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    # ‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   
    # ‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   
    # ‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà   
    # ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà   

    layout: x y w h =>
        
        super x y w h
        
        cw = int w/2
        
        x += @gutter+1
        
        @crumbs.layout x y cw 1                     # ùúèùñçùöíùñò ‚üÖ‚óØ‚äöùõãùñò œùùöíùñòùñçùõæ 
        @crumbs.layout x y @crumbs.rounded.length 1 # ‚üíùñçùõæ ùúè‚üí‚äö ‚üÖùïíùõæ‚óØùìäùúèùñò?
    
        x += @crumbs.rounded.length
        
        @statusfile.layout x y @statusfile.rounded.length 1
        
        x += @statusfile.rounded.length
        
        @filepos.layout x y @filepos.rounded.length 1
                
    # 0000000    00000000    0000000   000   000  
    # 000   000  000   000  000   000  000 0 000  
    # 000   000  0000000    000000000  000000000  
    # 000   000  000   000  000   000  000   000  
    # 0000000    000   000  000   000  00     00  
    
    draw: =>
        
        ‚Æê  if @hidden() or empty @file
                
        x      = 0
        y      = 0
        cursor = @state.mainCursor()
        cols   = @cells.cols
        fnl    = @file.length
        rdo    = @state.hasRedo()
        dty    = @state.isDirty()
        
        set = x char fg bg => 
            if fg is str ‚ûú fg = theme.status[fg]
            if bg is str ‚ûú bg = theme.status[bg]
            @cells.set x y char fg bg
            1
        add = char fg bg => x += set x char fg bg
        
        add 'ÓÇ∂' 'col' @color.gutter # column number ...
        colno = rpad @gutter-1 "#{cursor[0]}"
        for ci in 1...@gutter
            fg = cursor[0] ? 'fg' : 'col_zero'
            fg = 'col_empty' if belt.isLinesPosOutside @state.s.lines cursor 
            add (ci-1 < colno.length) ? colno[ci-1] : ' ' fg 'col'
        add 'ÓÇ¥' 'col' @color.gutter # column number end
              
        @crumbs.draw() # dir path
        @statusfile.draw() # file
        @filepos.draw()
        
        x += @crumbs.rounded.length
        x += @statusfile.rounded.length
        x += @filepos.rounded.length
        
        # dirty and redo indicators
        add 'ÓÇ∂' 'dark'  'empty'
        add 'Ôöí' 'dirty' 'dark' if dty
        add ' ' 'dirty' 'dark' if dty
        add 'Ôïì' 'redo'  'dark' if rdo
        add ' ' 'dark'  'dark'
        
        if @state.s.cursors.length > 1

            cur = "#{@state.s.cursors.length}‚ô¶"
             
            for i in 0...cur.length
                add cur[i] (i<cur.length-1) ? 'cur' : color.darken(theme.status.cur) 'dark'
                
        if @state.s.selections.length

            sel = "#{@state.s.selections.length}‚â°"
             
            for i in 0...sel.length
                add sel[i] (i<sel.length-1) ? 'sel' : color.darken(theme.status.sel) 'dark'

        if @state.s.highlights.length

            hil = "#{@state.s.highlights.length}‚ùá"
             
            for i in 0...hil.length
                add hil[i] (i<hil.length-1) ? 'hil' : color.darken(theme.status.hil) 'dark'
                                
        # fill to the right
        
        for ci in x...cols-1
            add ' ' null 'dark'
            
        add 'ÓÇ¥' 'dark' @color.gutter 
            
        ci = clamp 0 3 int((@time/(1000*1000)-8)/8)
        ch = ' ‚Ä¢ÔÅ±Ôâí'[ci] # ÔÅ©
        fg = [[32 32 32] [0 96 0] [255 0 0] [255 255 0]][ci]
        switch ch
            '‚Ä¢' ‚ûú #log "#{g1 ch} #{w3 kstr.time(BigInt(@time))}"
            'ÔÅ±' ‚ûú log "#{r3 ch} #{w3 kstr.time(BigInt(@time))}"
            'Ôâí' ‚ûú log "#{y5 ch} #{w3 kstr.time(BigInt(@time))}"
        set cols-2 ch fg 'dark'
             
export status

