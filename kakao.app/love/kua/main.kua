
use kxk.kxk
use ked

love.load = ->

    _G.fontWidth = 12
    _G.font  = love.graphics.setNewFont "font.ttf" fontWidth*2
    _G.count = 0
    #love.window.maximize()
    
    love.keyboard.setKeyRepeat true
    
    _G.ked = ked()
    
    nil

love.draw = ->

    count += 1
    (_ _ w h) = love.window.getSafeArea()
    
    scale = love.window.getDPIScale()
    lg = love.graphics
    
    lg.setColor 0.1 0.1 0.1 
    cw = fontWidth
    ch = fontWidth*2
    
    cols = math.floor w/cw
    rows = math.floor h/ch

    lg.setColor 0.2 0.2 0.2 
    lg.print "#{cols} #{rows} #{w} #{h} #{scale} #{count} #{love.timer.getFPS()} ◂" 2*cw h-ch*2
    
    ked∙draw cols rows cw ch
    
    nil
    
love.quit = ->

    ked∙quit()
    false
    
love.keypressed = key scancode isrepeat ->

    mods = ""
    switch key 
        "escape" ➜ key = "esc"
        "lshift" "rshift"
        "lctrl"  "rctrl"
        "lalt"   "ralt"
        "lgui"   "rgui"
            ⮐  
            
    lk = love.keyboard        
    
    if lk.isDown('lshift') or lk.isDown('rshift') ➜ mods &= "shift+"
    if lk.isDown('lctrl')  or lk.isDown('rctrl')  ➜ mods &= "ctrl+"
    if lk.isDown('lalt')   or lk.isDown('ralt')   ➜ mods &= "alt+"
    if lk.isDown('lgui')   or lk.isDown('rgui')   ➜ mods &= "cmd+"
    # log 'keypressed ' mods, key
    combo = mods & key
    char = switch key
        "return" ➜ "\n"
        "space"  ➜ " "
                 ➜ ""
    event = {"repeat":isrepeat combo:combo char:char}
    ked∙onKey combo event
    true
    
# love.keyreleased = key scancode ->
# 
#     log 'keyreleased ' key, " " scancode
