###
    ███████    ███   ███████  █████████
    ███   ███  ███  ███          ███   
    ███   ███  ███  ███          ███   
    ███   ███  ███  ███          ███   
    ███████    ███   ███████     ███   
###

class dict

    @size: d ->
    
        s = 0
        for k v in pairs d
            if k != "class" and type(k) == "string" and string.sub(k 1 2) != "__"
                s += 1
        s
    
    @str: d ->
    
        s = ""
        for k v in pairs d
            s &= k & ":"  & $v & " "
        kstr.pop s
        
    @keys: d ->
    
        a = []
        for k _ in pairs d
            a∙push k
        a

    @values: d ->
    
        a = []
        for _ v in pairs d
            a∙push v
        a
    
    @isdict: d ->
    
        d.len <= 0 and dict.size(d) >= 1 and d.class != array

⮐  dict