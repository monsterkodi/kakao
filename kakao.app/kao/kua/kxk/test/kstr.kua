
use kxk/kxk

▸ kstr

    ▸ splice

        s = "a/abc/ed.x"
        s = kstr.splice s  1 1
        s ▸ "/abc/ed.x"    
        s = kstr.splice s  2 1
        s ▸ "/bc/ed.x"
        s = kstr.splice s -1 1
        s ▸ "/bc/ed."
        s = kstr.splice s -2 1
        s ▸ "/bc/e."    
        s = kstr.splice s -2 2 "1" "2" "3"
        s ▸ "/bc/123"   
        s = kstr.splice s -3 3 "4" "5" "6"
        s ▸ "/bc/456"
         
    ▸ shift
        
        s = "1234"
        kstr.shift(s 2) ▸ "34"
    
    ▸ pop
         
        kstr.pop("1234" 2) ▸ "12"
        kstr.pop("ab\n")   ▸ "ab"

    ▸ split
        
        kstr.split "/"          "/"     ▸ ["" ""]
        kstr.split "a/b/c"      "/"     ▸ ["a" "b" "c"]
        kstr.split "/b/c"       "/"     ▸ ["" "b" "c"]
        kstr.split "/b/"        "/"     ▸ ["" "b" ""]
        kstr.split "//"         "/"     ▸ ["" "" ""]
        kstr.split "//"         ""      ▸ ["/" "/"]
        kstr.split "a.b.c.d"    "." 0   ▸ ["a.b.c.d"]
        kstr.split "a.b.c.d"    "." 1   ▸ ["a" "b.c.d"]
        kstr.split "a.b.c.d"    "." 2   ▸ ["a" "b" "c.d"]

    ▸ dollar
    
        $1    ▸ "1"
        $true ▸ "true"
        $nil  ▸ "nil"
        x = 42
        $x    ▸ "42"
        $1/3  ▸ "0.33333333333333"
        
    ▸ endsWith
    
        kstr.endsWith "uv\n" "\n" ▸ true
        
    ▸ trim
    
        kstr.rtrim "xyz\n" ▸ "xyz"
        kstr.trim  "abc\n" ▸ "abc"

    ▸ find
    
        kstr.find "123.56"     "." ▸ 4
        kstr.find ".23.56"     "." ▸ 1
        kstr.find "some.ext"   "e" ▸ 4
        kstr.find "abc"        "d" ▸ -1
        
    ▸ rfind
    
        kstr.rfind "123.56"     "." ▸ 4
        kstr.rfind ".23.56"     "." ▸ 4
        kstr.rfind "some.ext"   "e" ▸ 6
        kstr.find "abc"         "d" ▸ -1
        
    ▸ count
    
        kstr.count  ""                  ""      ▸ 0
        kstr.count  " "                 ""      ▸ 0
        kstr.count  " "                 " "     ▸ 1
        kstr.count  "  "                " "     ▸ 2
        kstr.count  "121"               "1"     ▸ 2
        kstr.count  "123...321"         "1"     ▸ 2
        kstr.count "123.321.123.312"    "1"     ▸ 4
        kstr.count "123.321.123.312"    "12"    ▸ 8
        
    ▸ stripol
    
        "#{1+2} x #{3*4}" ▸ "3 x 12"
        
        """
        #{2/2}, ...
        #{5*4}
        """ ▸ """
        1, ...
        20"""
    