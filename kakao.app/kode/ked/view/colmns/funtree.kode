###
████████  ███   ███  ███   ███  █████████  ████████   ████████  ████████  
███       ███   ███  ████  ███     ███     ███   ███  ███       ███       
██████    ███   ███  ███ █ ███     ███     ███████    ███████   ███████   
███       ███   ███  ███  ████     ███     ███   ███  ███       ███       
███        ███████   ███   ███     ███     ███   ███  ████████  ████████  
###

use ../../../kxk ▪ post slash
use ../../../kxk ◆ nfs
use ../../theme  ◆ theme icons
use ../menu      ◆ choices 

import rgxs from '../menu/quicky.json' with { type: "json" }

function funtree extends choices

    @: screen name features ->
        
        super screen name features
                        
        @state.syntax.setRgxs rgxs
        
        post.on 'indexer.indexed' @onIndex
        
    #  ███████   ███   ███        ███  ███   ███  ███████    ████████  ███   ███
    # ███   ███  ████  ███        ███  ████  ███  ███   ███  ███        ███ ███ 
    # ███   ███  ███ █ ███        ███  ███ █ ███  ███   ███  ███████     █████  
    # ███   ███  ███  ████        ███  ███  ████  ███   ███  ███        ███ ███ 
    #  ███████   ███   ███        ███  ███   ███  ███████    ████████  ███   ███

    onIndex: path info =>
    
        clssl = info.classes
        funcs = info.funcs
        
        for clss in clssl
            clss.file ?= path
            clss.name = ' ● ' + clss.name
            
        for func in funcs
            func.name = '   -> ' + func.name
        
        items = clssl.concat funcs
        
        @set items 'name'
        
    #  0000000    0000000  000000000  000   0000000   000   000  
    # 000   000  000          000     000  000   000  0000  000  
    # 000000000  000          000     000  000   000  000 0 000  
    # 000   000  000          000     000  000   000  000  0000  
    # 000   000   0000000     000     000   0000000   000   000  
    
    emitAction: action arg event  ->
        
        c = arg
        
        log "funtree.emitAction #{action}" c if action != 'hover'
        
        switch action
        
            'right'
                post.emit 'goto.line' c.line-1
                ⮐  
            'click'
            'return'
                post.emit 'goto.line' c.line-1
                post.emit 'focus' 'editor'
                ⮐  
                 
        super action arg event
        
export funtree
