###
     0000000  000000000   0000000   000000000  00000000  
    000          000     000   000     000     000       
    0000000      000     000000000     000     0000000   
         000     000     000   000     000     000       
    0000000      000     000   000     000     00000000  
###

use .. â—† state
use ../util â—† util
use ../../kxk â–ª kseg

global.lf = args... -> log args.map((a) -> "#{a}").join(' ')

cells = cols:55 rows:66
s = new state cells 'test'

txt = t    -> kseg.str(s.allLines()) â–¸ t
cur = x y  -> s.mainCursor() â–¸ [x y]
mul = c... -> s.allCursors() â–¸ c
sel = r... -> s.allSelections() â–¸ r

â–¸ state
    
    text = """
        line 1
        line 2
        line 3
        """
    
    s.syntax.ext = 'kode'
    s.loadLines util.linesForText(text)
    
    txt text
    
    â–¸ editing
    
        s.setMainCursor 1 1
        
        cur 1 1
        
        s.insert 'x'
        
        cur 2 1
        txt """
            line 1
            lxine 2
            line 3
            """    
            
        s.delete 'back'
        
        cur 1 1
        txt text
        
    â–¸ move lines
    
        s.moveSelectionOrCursorLines 'up'
        cur 1 0
        txt """
            line 2
            line 1
            line 3
            """
        s.moveSelectionOrCursorLines 'down'
        
        cur 1 1
        txt text
        
    â–¸ multiple
    
        s.expandCursors   'up'
        
        mul [1 0] [1 1]
        
        s.expandCursors   'down'
        
        mul [1 0] [1 1] [1 2]
        
        s.moveCursors 'left'
        
        mul [0 0] [0 1] [0 2]
        
        s.moveCursorsAndSelect 'right'
        
        mul [1 0] [1 1] [1 2]
        sel [0 0 1 0] [0 1 1 1] [0 2 1 2]
        
        s.moveCursors 'right' jump:['ws' 'word' 'empty' 'punct']
        
        mul [4 0] [4 1] [4 2]
        sel [0 0 1 0] [0 1 1 1] [0 2 1 2]
        
        s.selectAllLines()
        
        mul [4 0] [4 1] [4 2]
        sel [0 0 6 2] 
        
        s.selectAllLines()
        
        mul [4 0] [4 1] [4 2]
        sel()
        
        s.moveCursors 'right'
        s.moveCursorsAndSelect 'left' jump:['word']
        s.moveCursorsAndSelect 'left' jump:['word']
        
        mul [0 0] [0 1] [0 2]   
        sel [0 0 5 0] [0 1 5 1] [0 2 5 2]
        
        s.insert '\n' 
        
        mul [0 1] [0 3] [0 5]
        sel()
        txt """
            
            1
            
            2
            
            3
            """    
            
    â–¸ unicode
    
        text = """
            s = "ðŸ§‘ðŸŒ¾"
            line 3
            """
        
        s.syntax.ext = 'kode'
        s.loadLines util.linesForText(text)
        
        txt text
        
        s.toggleCommentAtSelectionOrCursorLines()

        txt """
            # s = "ðŸ§‘ðŸŒ¾"
            line 3
            """
        s.toggleCommentAtSelectionOrCursorLines()
        
        txt text
        