###
    000   000  00000000   0000000  
    000  000   000       000       
    0000000    000000    0000000   
    000  000   000            000  
    000   000  000       0000000   
###

class KFS
    
    @watch:         (p)  -> log 'KFS.watch' p
    @list:          (p) ○-> await kakao.request 'fs.list'       p
    @read:          (p) ○-> await kakao.request 'fs.read'       p
    @write:      (p, t) ○-> await kakao.request 'fs.write'      p, t
    @exists:        (p) ○-> await kakao.request 'fs.exists'     p
    @fileExists:    (p) ○-> await kakao.request 'fs.fileExists' p
    @dirExists:     (p) ○-> await kakao.request 'fs.dirExists'  p
    @isWritable:    (p) ○-> await kakao.request 'fs.isWritable' p
    @isReadable:    (p) ○-> await kakao.request 'fs.isReadable' p
    @duplicate:     (p) ○-> await kakao.request 'fs.duplicate'  p
    @remove:        (p) ○-> await kakao.request 'fs.remove'     p
    @trash:         (p) ○-> await kakao.request 'fs.trash'      p
    @move:       (p, d) ○-> await kakao.request 'fs.move'       p, d
    @copy:       (p, d) ○-> await kakao.request 'fs.copy'       p, d
    @mkdir:         (p) ○-> await kakao.request 'fs.mkdir'      p
    @info:          (p) ○-> await kakao.request 'fs.info'       p
    @type:          (p) ○-> i = await kakao.request 'fs.info'   p; i.type
    @isFile:        (p) ○-> await KFS.fileExists                p
    @isDir:         (p) ○-> await KFS.dirExists                 p
        
export KFS
