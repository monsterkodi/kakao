###
 0000000   00000000    0000000    0000000
000   000  000   000  000        000     
000000000  0000000    000  0000  0000000 
000   000  000   000  000   000       000
000   000  000   000   0000000   0000000 
###

use ./utils ▪ kc ke kd

▸ args

    ▸ function
    
        kc  """
            function D
                f: a b -> a + b
            """ ▸
            """
            
            D = (function ()
            {
                function D ()
                {}
            
                D.prototype["f"] = function (a, b)
                {
                    return a + b
                }
            
                return D
            })()
            
            """

    ▸ class
    
        kc  """
            class D
                f: a b -> a + b
            """ ▸
            """
            class D
            {
                f (a, b)
                {
                    return a + b
                }
            }
            
            """
            

    ▸ constructor

        kc  """
            function D
                @: a b -> a + b
            """ ▸
            """
            
            D = (function ()
            {
                function D (a, b)
                {
                    a + b
                }
            
                return D
            })()
            
            """
    
        kc  """
            class D
                @: a b -> a + b
            """ ▸
            """
            class D
            {
                constructor (a, b)
                {
                    a + b
                }
            }
            
            """
            
    ▸ this
    
        kc  """
            class D
                t: @a ->
            """ ▸
            """
            class D
            {
                t (a)
                {
                    this.a = a
                }
            }
            
            """
    
        kc  """
            class D
                t: @a @b -> @a + @b
            """ ▸
            """
            class D
            {
                t (a, b)
                {
                    this.a = a
                    this.b = b
                
                    return this.a + this.b
                }
            }
            
            """
    
    ▸ default
            
        kc  """
            class D
                d: a=1 -> a
            """ ▸
            """
            class D
            {
                d (a = 1)
                {
                    return a
                }
            }
            
            """

        kc  """
            class D
                d: a='2' -> a
            """ ▸
            """
            class D
            {
                d (a = '2')
                {
                    return a
                }
            }
            
            """

        kc  """
            class D
                d: a b=2 d='3' -> a
            """ ▸
            """
            class D
            {
                d (a, b = 2, d = '3')
                {
                    return a
                }
            }
            
            """
            
        kc  """
            class D
                d: a=@b -> a
            """ ▸
            """
            class D
            {
                d (a = this.b)
                {
                    return a
                }
            }
            
            """

        kc  """
            class D
                d: a={} -> a
            """ ▸
            """
            class D
            {
                d (a = {})
                {
                    return a
                }
            }
            
            """

        kc  """
            class D
                d: a=[] -> a
            """ ▸
            """
            class D
            {
                d (a = [])
                {
                    return a
                }
            }
            
            """
            