###
000000000   0000000   0000000
   000     000   000  000   000
   000     000000000  0000000
   000     000   000  000   000
   000     000   000  0000000
###

use ../../kxk ▪ elem post slash tooltip
use ../tools  ◆ File Git Projects
use ../editor ◆ Render Syntax

class Tab

    @: (@tabs, @file, @isPrj) ->

        @dirty  = false
        @pinned = false
        @div    = elem class: 'tab app-drag-region' text: ''
        @tabs.div.appendChild @div
        
        @update()
        
        if @isPrj
            post.on 'gitStatus' @onGitStatus
            Git.status @file
        
    stashInfo: ->
        
        info = {}
        if @isPrj
            info.prj = @file
            if @hiddenPrjFiles
                info.hidden = @hiddenPrjFiles
        else
            info.file   = @file
            info.pinned = true if @pinned
            info.active = true if @isActive()
        info

    foreignChanges: (lineChanges) ->

        @foreign ?= []
        @foreign.push lineChanges
        @update()

    reload: ->

        delete @state
        @dirty = false
        @update()

    #  0000000   0000000   000   000  00000000
    # 000       000   000  000   000  000
    # 0000000   000000000   000 000   0000000
    #      000  000   000     000     000
    # 0000000   000   000      0      00000000

    saveChanges: ->

        if @state

            if @foreign?.length
                for changes in @foreign
                    for change in changes
                        switch change.change
                            'changed'  ➜ @state.state = @state.state.changeLine change.doIndex, change.after
                            'inserted' ➜ @state.state = @state.state.insertLine change.doIndex, change.after
                            'deleted'  ➜ @state.state = @state.state.deleteLine change.doIndex

            if @state.state
                
                File.save @state.file, @state.state.text(), (file) =>
                    return error "tab.saveChanges failed #{err}" if not file
                    @revert()
            else
                error 'tab.saveChanges -- nothing to save?'
        else
            post.emit 'saveChanges'

    setFile: (newFile) ->
        
        if not slash.samePath @file, newFile
            @file = slash.path newFile
            @update()
            
    #  0000000  000000000   0000000   000000000  00000000
    # 000          000     000   000     000     000
    # 0000000      000     000000000     000     0000000
    #      000     000     000   000     000     000
    # 0000000      000     000   000     000     00000000

    storeState: ->

        if window.editor.currentFile
            @state = window.editor.do.tabState()

    # 000   000  00000000   0000000     0000000   000000000  00000000
    # 000   000  000   000  000   000  000   000     000     000
    # 000   000  00000000   000   000  000000000     000     0000000
    # 000   000  000        000   000  000   000     000     000
    #  0000000   000        0000000    000   000     000     00000000

    update: ->

        @div.innerHTML = ''
        @div.classList.toggle 'dirty' @dirty

        sep = '●'
        sep = '' if @isPrj
        @dot = elem 'span' class:'dot' text:sep
        @div.appendChild @dot

        file = @file

        diss = Syntax.dissForTextAndSyntax slash.file(file), 'ko'
        
        if not prefs.get 'tabs|extension'
            if valid slash.ext file
                diss.pop()
                diss.pop()
        
        name = elem 'span' class:'name app-drag-region' html:Render.line diss, charWidth:0
        @div.appendChild name
        
        if @isPrj
            @div.classList.add 'prj'
        else
            html = ''
            if @pinned
                html = """
                <svg width="100%" height="100%" viewBox="0 0 30 30" fill="transparent">
                    <circle cx="15" cy="12" r="4" />
                    <line x1="15" y1="16"  x2="15"  y2="22" stroke-linecap="round"></line>
                </svg>
                """
            else if @tmpTab
                html = """
                <svg width="100%" height="100%" viewBox="0 0 30 30">
                    <circle cx="15" cy="9"  r="2" />
                    <circle cx="15" cy="15" r="2" />
                    <circle cx="15" cy="21" r="2" />
                </svg>
                """
            
            @div.appendChild elem 'span' class:'tabstate app-drag-region' html:html, click:@togglePinned

        if @file?
                        
            @tooltip = new tooltip elem:name, bound:@div, html:@tooltipHtml, x:-2

        if @isPrj
            if @hiddenPrjFiles
                for i in 0...@hiddenPrjFiles.length
                    dot = elem 'span' class:'prjdot' text:'●'
                    @div.appendChild dot
                    if @hiddenPrjFiles[i] == window.textEditor.currentFile
                        dot.classList.add 'activeTab'
        else if @dirty
            @div.appendChild elem 'span' class:'dot' text:'●'
        @
        
    tooltipHtml: => 
                
        if @file?
            
            diss = Syntax.dissForTextAndSyntax slash.tilde(@file), 'ko'
            html = Render.line diss, wrapSpan:'tooltip-path'
            
            if @isPrj and numFiles = Projects.files(@file).length
                html += Render.line Syntax.dissForTextAndSyntax("#{numFiles} files" 'git'), wrapSpan:'tooltip-line'
                Git.status @file
                
        html

    #  0000000   000  000000000   0000000  000000000   0000000   000000000  000   000   0000000  
    # 000        000     000     000          000     000   000     000     000   000  000       
    # 000  0000  000     000     0000000      000     000000000     000     000   000  0000000   
    # 000   000  000     000          000     000     000   000     000     000   000       000  
    #  0000000   000     000     0000000      000     000   000     000      0000000   0000000   
    
    onGitStatus: (status) => 
        
        return if status.gitDir != @file
        
        if @tooltip?.div?
            if status.deleted.length ➜ @tooltip.div.innerHTML += Render.line Syntax.dissForTextAndSyntax("▴ #{status.deleted.length} deleted" 'git'), wrapSpan:'tooltip-line' 
            if status.added.length   ➜ @tooltip.div.innerHTML += Render.line Syntax.dissForTextAndSyntax("▪ #{status.added.length} added"     'git'), wrapSpan:'tooltip-line' 
            if status.changed.length ➜ @tooltip.div.innerHTML += Render.line Syntax.dissForTextAndSyntax("● #{status.changed.length} changed" 'git'), wrapSpan:'tooltip-line' 
        
        t = ''
        if status.deleted.length ➜ t += '<div class="git-status-icon git-deleted deleted-triangle">▴</div>'
        if status.added.length   ➜ t += '<div class="git-status-icon git-added       added-square">▪</div>'
        if status.changed.length ➜ t += '<div class="git-status-icon git-changed   changed-circle">●</div>'
        @dot.innerHTML = t
        
    index: -> @tabs.tabs.indexOf @
    prev:  -> @tabs.tab @index()-1 if @index() > 0
    next:  -> @tabs.tab @index()+1 if @index() < @tabs.numTabs()-1
    nextOrPrev: -> @next() ? @prev()

    close: ->

        if @dirty
            @saveChanges()

        @div.remove()
        @tooltip?.del()
        post.emit 'tabClosed' @file
        @

    # 0000000    000  00000000   000000000  000   000
    # 000   000  000  000   000     000      000 000
    # 000   000  000  0000000       000       00000
    # 000   000  000  000   000     000        000
    # 0000000    000  000   000     000        000

    setDirty: (dirty) ->

        if @dirty != dirty
            @dirty = dirty
            if @dirty then delete @tmpTab
            @update()
        @
        
    togglePinned: =>
        
        @pinned = not @pinned
        delete @tmpTab
        @update()
        @

    # 00000000   00000000  000   000  00000000  00000000   000000000
    # 000   000  000       000   000  000       000   000     000
    # 0000000    0000000    000 000   0000000   0000000       000
    # 000   000  000          000     000       000   000     000
    # 000   000  00000000      0      00000000  000   000     000

    revert: ->

        delete @foreign
        delete @state
        @dirty = false
        @update()
        @tabs.update()
        @

    #  0000000    0000000  000000000  000  000   000   0000000   000000000  00000000
    # 000   000  000          000     000  000   000  000   000     000     000
    # 000000000  000          000     000   000 000   000000000     000     0000000
    # 000   000  000          000     000     000     000   000     000     000
    # 000   000   0000000     000     000      0      000   000     000     00000000

    activate: ->
        
        if @isPrj
            if @hiddenPrjFiles
                hidden = @hiddenPrjFiles
                delete @hiddenPrjFiles
                for file in hidden
                    tab = @tabs.addTab file
                    if window.textEditor.currentFile == file
                        tab.setActive()
            else
                @hiddenPrjFiles = @tabs.getPrjFiles @file
                for tab in @tabs.getPrjTabs @file
                    @tabs.closeTab tab
            @update()
            @tabs.update()
        else
            post.emit 'jumpToFile' @file
        @

    finishActivation: ->

        @setActive()

        if valid @state
            window.editor.do.setTabState @state
            delete @state

        if @foreign?.length
            for changes in @foreign
                window.editor.do.foreignChanges changes
            delete @foreign

        @tabs.update()
        @

    #  0000000    0000000  000000000  000  000   000  00000000
    # 000   000  000          000     000  000   000  000
    # 000000000  000          000     000   000 000   0000000
    # 000   000  000          000     000     000     000
    # 000   000   0000000     000     000      0      00000000

    isActive: -> @div.classList.contains 'active'

    setActive: ->

        if not @isActive()
            @div.classList.add 'active'
        @

    clearActive: ->

        @div.classList.remove 'active'
        @

export Tab
