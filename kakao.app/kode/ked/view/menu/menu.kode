###
    ██     ██  ████████  ███   ███  ███   ███  
    ███   ███  ███       ████  ███  ███   ███  
    █████████  ███████   ███ █ ███  ███   ███  
    ███ █ ███  ███       ███  ████  ███   ███  
    ███   ███  ████████  ███   ███   ███████   

    simple list of actions with optional greet
###

use ../../../kxk    ▪ kstr slash post noon
use ../../util      ◆ frecent
use ../../edit/tool ◆ belt
use ../../theme     ◆ theme 
use ../screen       ◆ cells 
use                 ◆ greet inputchoice

function menu extends inputchoice

    @: @screen @name='menu' ->
        
        super @screen @name
        
        @greet = new greet @screen
        
    #  0000000   00000000   00000000    0000000   000   000   0000000   00000000  
    # 000   000  000   000  000   000  000   000  0000  000  000        000       
    # 000000000  0000000    0000000    000000000  000 0 000  000  0000  0000000   
    # 000   000  000   000  000   000  000   000  000  0000  000   000  000       
    # 000   000  000   000  000   000  000   000  000   000   0000000   00000000  
    
    arrange: =>

        w = @width+2+1 # 2 for frame, 1 for right 
        c = @choices.numChoices()
        
        ih = @inputIsActive() ? 2 : 0
        iz = max 0 ih - 1
        
        h = c + 2 + ih
        scy = int @screen.rows/2
        y  = int scy-(c+2)/2
        y -= ih
        
        scx = int @screen.cols/2
        x  = int scx - w/2
        
        [gw gh] = belt.cellSize @greet.header
        
        gx = int(scx-gw/2)
        gy = max(0 int(y-gh-1+ih))
        
        if @greet.visible() and y <= gy+gh # if menu overlaps greet
        
            diff = (gy+gh)-y
            
            while diff and gy        # move greet up while possible
                 gy -= 1           
                 diff = (gy+gh)-y  
                 
            while diff and y+h < @screen.rows # move menu down
                y += 1
                diff = (gy+gh)-y
                 
        @greet.layout    gx    gy
        @input.layout    x+2   y+1      w-4  iz
        @choices.layout  x+1   y+1+ih   w-2  c
        @cells.layout    x     y        w    h

    #  0000000  000   000   0000000   000   000
    # 000       000   000  000   000  000 0 000
    # 0000000   000000000  000   000  000000000
    #      000  000   000  000   000  000   000
    # 0000000   000   000   0000000   00     00

    show: greet=false ->
        
        if greet
            @greet.show() 
            @screen.t.setTitle 'kėd'
        
        items = belt.linesForText
            """
            recent ...
            open ...
            new
            help
            quit
            """
        
        items.splice items.length-2 0 'about' if not greet
        items.splice items.indexOf('recent ...') 1 if empty ked_session.recentFiles()
        
        items = items.map (i) -> ' ' + i # padding for  
            
        ccol = int(@screen.cols/2) - 5

        @width = belt.widthOfLines items
        
        @input.set ''
        @input.hide()
        @choices.set items
        @choices.select 0
        @choices.state.setView [0 0]
        
        super()
        
    # 00000000   00000000   0000000  00000000  000   000  000000000  
    # 000   000  000       000       000       0000  000     000     
    # 0000000    0000000   000       0000000   000 0 000     000     
    # 000   000  000       000       000       000  0000     000     
    # 000   000  00000000   0000000  00000000  000   000     000     
    
    showRecent: ->
                
        recent = frecent.list 'file'
        
        @choices.set recent

        post.emit 'quicky.files' recent
        
    hide: =>
    
        @greet.hide()
        super()
    
    #  0000000   00000000   00000000   000      000   000  
    # 000   000  000   000  000   000  000       000 000   
    # 000000000  00000000   00000000   000        00000    
    # 000   000  000        000        000         000     
    # 000   000  000        000        0000000     000     
    
    applyChoice: choice ->
        
        # log "applyChoice ▸#{choice}◂"
        
        switch choice
            'new'        ➜ @hide(); post.emit 'file.new'
            'about'      ➜ @show true # reopen with greeting header
            'quit'       ➜ @greet.hide(); post.emit 'quit'                    
            'open ...'   ➜ post.emit 'browse.dir' process.cwd()
            'recent ...' ➜ @showRecent()
            'help'       ➜ @hide(); post.emit 'file.open' slash.path(◆dir '../../../../kode/ked/help.md')
            
        true
        
    onWheel: ->
                            
    # 0000000    00000000    0000000   000   000
    # 000   000  000   000  000   000  000 0 000
    # 000   000  0000000    000000000  000000000
    # 000   000  000   000  000   000  000   000
    # 0000000    000   000  000   000  00     00

    draw: ->

        ⮐  if @hidden()
        
        @arrange()
        @greet.draw()
        @drawFrame()
        @drawChoices()

export menu
