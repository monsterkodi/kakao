###
    000000000  00000000   0000000  000000000     0000000   0000000   000      000   000  
       000     000       000          000       000       000   000  000      000  000   
       000     0000000   0000000      000       000       000000000  000      0000000    
       000     000            000     000       000       000   000  000      000  000   
       000     00000000  0000000      000        0000000  000   000  0000000  000   000  
###

use .. ◆ symbol calc

▸ calc
    
    # 000  000   000   0000000    0000000  000000000  000  000   000  00000000  
    # 000  0000  000  000   000  000          000     000  000   000  000       
    # 000  000 0 000  000000000  000          000     000   000 000   0000000   
    # 000  000  0000  000   000  000          000     000     000     000       
    # 000  000   000  000   000   0000000     000     000      0      00000000  
    
    ▸ inactive
        #  if input contents is this ▾                      then these keys ▾ should be inactive
        list = [    
            [[        '8°'                                  symbol.phi],    ['0' '1' symbol.euler, symbol.phi]]
            [[   '0.' '8°'                                  symbol.phi],    [        symbol.euler, symbol.pi]]            
            [['' '0.'                                                 ],    [        symbol.rad2deg]]
            [['' '0.'                                                 ],    [        symbol.deg2rad]]
            [['' '0.' '4^' '6/'],                                           [symbol.oneoverx, symbol.exp]]
            [['' '4^'],                                                     ['^']]
            [['' '0.' '8°' '5.5'],                                          ['.']]
            [['' '0.' '6/'],                                                ['/']]
            [['' '0.' '7*'],                                                ['*']]
            [['' '5.' '8°' '5.5'],                                          [symbol.dot]]
            [['' '4^' '6/'],                                                [symbol.pow]]
            [['' '0.'],                                                     [symbol.sqrt]]            
            [['' '(' '2+2' '((2+2)*3)'],                                    [symbol.close]]
            [[   '(' '2+2' '((2+2)*3)'],                                    [symbol.open]]
        ]
        for l in list
            for t in l[0]
                for k in l[1]
                    calc.activeKey t, k ▸ false
                
    #  0000000    0000000  000000000  000  000   000  00000000  
    # 000   000  000          000     000  000   000  000       
    # 000000000  000          000     000   000 000   0000000   
    # 000   000  000          000     000     000     000       
    # 000   000   0000000     000     000      0      00000000  
    
    ▸ active
        #  if input contents is this ▾                      then these keys ▾ should be active
        list = [
            [[        '1' '(1+2)' '5.5'                     symbol.phi],    [symbol.deg2rad]]
            [[        '1' '(1+2)' '5.5'                     symbol.phi],    [symbol.rad2deg]]
            [[        '1' '(1+2)' '5.5'                     symbol.phi],    [symbol.pow]]
            [[        '1' '(1+2)' '5.5' '9/10+12'           symbol.phi],    [symbol.oneoverx]]
            [[        '1' '(1+2)' '5.5' '8°'                symbol.phi],    [symbol.sqrt]]
            [[        '1' '(1+2)' '5.5' '9/10+12' '8/' '5*' symbol.phi],    ['+''-']]
            [['' '0.' '1'         '5.5' '9/10+12' '8/' '5*'],               ['1''2''9''0']]
        ]
        for l in list
            for t in l[0]
                for k in l[1]
                    calc.activeKey t, k ▸ true
    
    ▸ calc
        
        list = [
            ['2^2^2',       '16']
            ['2^(3^4)',     '2417851639229258349412352']
            ['2^3^4',       '2417851639229258349412352']
            ['(2^3)^4',     '4096']
            ['9*-3',        '-27']
            ['180°',        '3.141592653589793']
            ['√(9)',        '3']
            ['√(8+1',       '3']
            ['log(E',       '1']
            ['cos(π',       '-1']
            ['sin(π/2',     '1']
            ['cos(sin(π',   '1']
            ['1/0',         '∞']
            ['1/(∞',        '0']
            ['0/0',         '']
        ]
        for l in list 
            calc.calc l[0] ▸ l[1]
        
    ▸ equals
        
        list = [
            ['2^2',   '=', '4']
            ['2^4',   '=', '16']
            ['2^2^2', '=', '16']
        ]
        for l in list 
            calc.textKey l[0], l[1] ▸ l[2]
    
    ▸ replace
        
        list = [
            ['2^0',   '1']
            ['2^0',   '2']
            ['∞',     '3']
        ]
        for l in list 
            calc.textKey l[0], l[1] ▸ l[0].substr(0,l[0].length-1)+l[1]
                
    # 0000000    000       0000000    0000000  000   000  
    # 000   000  000      000   000  000       000  000   
    # 0000000    000      000   000  000       0000000    
    # 000   000  000      000   000  000       000  000   
    # 0000000    0000000   0000000    0000000  000   000  
    
    ▸ block
        #  these input contents ▾ with these keys pressed ▾ shouldn't change the input
        list = [
            [['0', '0°', symbol.euler, 'π'],              '0']
            [['1°', symbol.euler, 'π'],                   '1']
            [['2°', symbol.euler, 'π'],                   'π']
            [['3°', symbol.euler, 'π'],                    symbol.euler]            
            [['', '4^'],                                  '^']
            [['', '5.', '5°', '5.5'],                     '.']
            [['', '6.', '6/'],                            '/']
            [['', '7.', '7*'],                            '*']
            [['8°', '8.', symbol.euler, 'π'],             '°']
            [['9.'],                                      '√']            
            [['', '(', '2+2', '((2+2)*3)'],               ')']
        ]
        for l in list
            for t in l[0]
                calc.textKey t, l[1] ▸ t
                
    
            
            