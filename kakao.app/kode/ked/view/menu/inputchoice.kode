###
000  000   000  00000000   000   000  000000000   0000000  000   000   0000000   000   0000000  00000000  
000  0000  000  000   000  000   000     000     000       000   000  000   000  000  000       000       
000  000 0 000  00000000   000   000     000     000       000000000  000   000  000  000       0000000   
000  000  0000  000        000   000     000     000       000   000  000   000  000  000       000       
000  000   000  000         0000000      000      0000000  000   000   0000000   000   0000000  00000000  
###

use ../../../kxk ▪ post kstr kseg
use ../../theme  ◆ color theme
use ../base      ◆ view input
use ../menu      ◆ choices

function inputchoice extends view

    @: @screen @name features ->

        super @screen @name features
        
        @input   = new input   @screen "#{@name}_input"
        @choices = new choices @screen "#{@name}_choices" features

        @choices.mapscr?.hide()       

        @input.on   'action'  @onInputAction
        @choices.on 'action'  @onChoicesAction
        
    inputIsActive: -> @input.hasFocus() or @input.current().length
        
    # 000       0000000   000   000   0000000   000   000  000000000  
    # 000      000   000   000 000   000   000  000   000     000     
    # 000      000000000    00000    000   000  000   000     000     
    # 000      000   000     000     000   000  000   000     000     
    # 0000000  000   000     000      0000000    0000000      000     
    
    layout: =>

        x = int @screen.cols/4
        y = int @screen.rows/4
        w = int @screen.cols/2
        h = int @screen.rows/2-4

        cs = min h @choices.numFiltered()
        
        @input.layout    x+2   y+1  w-4  1
        @choices.layout  x+2   y+3  w-3  cs
        @cells.layout    x     y    w    cs+4
        
    #  0000000  000   000   0000000   000   000
    # 000       000   000  000   000  000 0 000
    # 0000000   000000000  000   000  000000000
    #      000  000   000  000   000  000   000
    # 0000000   000   000   0000000   00     00

    show: =>

        super()
        @choices.grabFocus()
        redraw:true

    hide: => 
        
        @choices.mapscr?.hide()     
        super()
                            
    # 000  000   000  00000000   000   000  000000000  
    # 000  0000  000  000   000  000   000     000     
    # 000  000 0 000  00000000   000   000     000     
    # 000  000  0000  000        000   000     000     
    # 000  000   000  000         0000000      000     
    
    onInputChange: text =>
        
        ⮐ if text == @choices.filterText

        @choices.filter text
        @choices.state.selectLine 0
        @choices.state.setMainCursor @choices.state.s.lines[0].length 0
        @choicesFiltered()
        @layout()
        
    onInputAction: action text =>
        
        # log 'input.choice.onInputAction' action text
        
        switch action
            'right'
            'submit' ➜ ⮐ @applyChoice @choices.current()
            'change' ➜ ⮐ @onInputChange text
            'up'
            'down'   ➜ ⮐ @choices.moveSelection action
    
        # log "inputchoice.onInputAction #{action} #{text} (unhandled?)"
        
    #  0000000  000   000   0000000   000   0000000  00000000   0000000  
    # 000       000   000  000   000  000  000       000       000       
    # 000       000000000  000   000  000  000       0000000   0000000   
    # 000       000   000  000   000  000  000       000            000  
    #  0000000  000   000   0000000   000   0000000  00000000  0000000   
    
    choicesFiltered: ->
        
    currentChoice: ->
    
        choice = @choices.current() ? @input.current()
        choice = trim choice if choice is str
    
    onChoicesAction: action choice =>
        
        switch action
            'click'
            'right'
            'space'
            'return' ➜ ⮐ @applyChoice @choices.current()
            
    # 0000000    00000000    0000000   000   000
    # 000   000  000   000  000   000  000 0 000
    # 000   000  0000000    000000000  000000000
    # 000   000  000   000  000   000  000   000
    # 0000000    000   000  000   000  00     00

    draw: ->

        ⮐ if @hidden()
        
        @layout()
        @drawFrame()
        @drawChoices()

    drawChoices: ->
        
        @input.draw()
        @choices.draw()    

    drawFrame: ->
        
        fg = theme.quicky_frame_fg
        bg = theme.quicky_frame_bg
        
        if @input.visible()
            @cells.draw_frame 0 0 -1 -1 fg:fg bg:bg hdiv:[2]
        else
            @cells.draw_frame 0 0 -1 -1 fg:fg bg:bg
            
    moveFocus: ->
        
        if @choices.hasFocus()
            @input.grabFocus()
            @input.selectAll()
        else
            @choices.grabFocus()

    # 000   000  00000000  000   000
    # 000  000   000        000 000
    # 0000000    0000000     00000
    # 000  000   000          000
    # 000   000  00000000     000

    onKey: key event =>

        ⮐ if @hidden()

        switch event.combo
            
            'tab' ➜ ⮐ @moveFocus()
            
            'esc'     

                post.emit 'focus' 'editor'
                ⮐ @hide()

        if result = @choices.onKey key event

            if event.char and event.char not in ' \n'
                @input.grabFocus()
            else
                ⮐ result
             
        if result = @input.onKey key event
            @choices.grabFocus() if empty @input.current()
            ⮐ result

        true
        
    # 00     00   0000000   000   000   0000000  00000000  
    # 000   000  000   000  000   000  000       000       
    # 000000000  000   000  000   000  0000000   0000000   
    # 000 0 000  000   000  000   000       000  000       
    # 000   000   0000000    0000000   0000000   00000000  
    
    onMouse: event =>

        ⮐ if @hidden()
        
        ret = @input.onMouse   event ; ⮐ ret if ret?.redraw
        ret = @choices.onMouse event ; ⮐ ret if ret?.redraw
        
        super event
        
        if event.type == 'press' and not @hover
            post.emit 'focus' 'editor'
            ⮐ @hide()
            
        @hover

    # 000   000  000   000  00000000  00000000  000      
    # 000 0 000  000   000  000       000       000      
    # 000000000  000000000  0000000   0000000   000      
    # 000   000  000   000  000       000       000      
    # 00     00  000   000  00000000  00000000  0000000  
    
    onWheel: event =>

        ⮐ if @hidden()

        ret = @input.onWheel   event ; ⮐ ret if ret?.redraw
        ret = @choices.onWheel event ; ⮐ ret if ret?.redraw
        
        inside = @cells.isInsideEvent event
        if inside ➜ ⮐ redraw:false 
        
export inputchoice
