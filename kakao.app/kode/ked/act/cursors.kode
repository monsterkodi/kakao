###
 0000000  000   000  00000000    0000000   0000000   00000000    0000000  
000       000   000  000   000  000       000   000  000   000  000       
000       000   000  0000000    0000000   000   000  0000000    0000000   
000       000   000  000   000       000  000   000  000   000       000  
 0000000   0000000   000   000  0000000    0000000   000   000  0000000   
###

use ../util ◆ util

export

    #  0000000   000      000      
    # 000   000  000      000      
    # 000000000  000      000      
    # 000   000  000      000      
    # 000   000  0000000  0000000  
    
    allCursors: -> 
        
        cursors = @s.cursors.asMutable()
        util.normalizePositions cursors @s.lines.length-1
    
    # 00000000  000   000  00000000    0000000   000   000  0000000    
    # 000        000 000   000   000  000   000  0000  000  000   000  
    # 0000000     00000    00000000   000000000  000 0 000  000   000  
    # 000        000 000   000        000   000  000  0000  000   000  
    # 00000000  000   000  000        000   000  000   000  0000000    
    
    expandCursors: dir ->
        
        cursors = @allCursors()

        dy = dir == 'up' ? -1 : 1
        
        newCursors = []
        for c in cursors
            newCursors.push [c[0] c[1]+dy]

        cursors = cursors.concat newCursors
        
        @set 'cursors' cursors
        
    #  0000000   0000000    0000000    
    # 000   000  000   000  000   000  
    # 000000000  000   000  000   000  
    # 000   000  000   000  000   000  
    # 000   000  0000000    0000000    
    
    addCursor: x y ->
        
        pos = util.pos x y
        cursors = @allCursors()
        cursors.push pos
        @set 'cursors' cursors cursors.length-1
        
    # 00     00   0000000   000   000  00000000  
    # 000   000  000   000  000   000  000       
    # 000000000  000   000   000 000   0000000   
    # 000 0 000  000   000     000     000       
    # 000   000   0000000       0      00000000  
    
    moveCursor: dir steps=1 ->
        
        if @s.highlights.length
            @deselect()
        
        cursors = @allCursors()
        
        for c in cursors
            switch dir
                'left'  ➜ c[0] -= 1
                'right' ➜ c[0] += 1
                'up'    ➜ c[1] -= steps
                'down'  ➜ c[1] += steps 
                'eol'   ➜ c[0] = @s.lines[c[1]].length
                'bol'   ➜ c[0] = 0
                'bof'   ➜ c[0] = 0; c[1] = 0
                'eof'   ➜ c[1] = @s.lines.length-1; c[0] = @s.lines[c[1]].length
 
        @set 'cursors' cursors @s.main
        
    #  0000000  000   000  00000000    0000000   0000000   00000000   
    # 000       000   000  000   000  000       000   000  000   000  
    # 000       000   000  0000000    0000000   000   000  0000000    
    # 000       000   000  000   000       000  000   000  000   000  
    #  0000000   0000000   000   000  0000000    0000000   000   000  
        
    setMainCursor: x y ->
        
        [x y] = util.pos x y
        
        y = clamp 0 @s.lines.length-1 y
        x = max 0 x
                        
        @set 'cursors' [[x y]] 0
        
    moveMainCursor: x y ->
        
        [x y] = util.pos x y
        
        y = clamp 0 @s.lines.length-1 y
        x = max 0 x
        
        mainCursor = @mainCursor()
        
        ⮐ if mainCursor eql [x y]

        cursors = @allCursors()

        cursors.splice util.indexOfPosInPositions(mainCursor cursors) 1
        
        main = util.indexOfPosInPositions [x y] cursors
        if main < 0
            cursors.push [x y]
            main = cursors.length-1
        
        @set 'cursors' cursors main
                
    mainCursor: -> @s.cursors[@s.main].asMutable()
                    
    #  0000000  00000000  000      00000000   0000000  000000000  
    # 000       000       000      000       000          000     
    # 0000000   0000000   000      0000000   000          000     
    #      000  000       000      000       000          000     
    # 0000000   00000000  0000000  00000000   0000000     000     
    
    moveCursorAndSelect: dir ->
        
        selections = @s.selections.asMutable()
        mc = @mainCursor()
        selection = [mc[0] mc[1] mc[0] mc[1]]
        selections.push selection 
        
        @moveCursor dir 1
        
        switch dir
            'left'  ➜ selection[0] = selection[0]-1
            'right' ➜ selection[2] = selection[2]+1
            'up'    ➜ selection[1] = max 0 selection[1]-1
            'down'  ➜ selection[3] = min @s.lines.length-1 selection[3]+1
            'eol'   ➜ selection[2] = Infinity
            'bol'   ➜ selection[0] = 0
            'bof'   ➜ selection[1] = 0; selection[0] = 0
            'eof'   ➜ selection[3] = @s.lines.length-1; selection[2] = @s.lines[@s.lines.length-1].length
            
        selection[0] = clamp 0 @s.lines[selection[1]].length selection[0]
        selection[2] = clamp 0 @s.lines[selection[3]].length selection[2]
        
        @set 'selections' selections
        @
        
        
        

