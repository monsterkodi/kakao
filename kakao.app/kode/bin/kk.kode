###
    000   000  000   000    
    000  000   000  000     
    0000000    0000000      
    000  000   000  000     
    000   000  000   000    
    
    commanline tool that builds the application
###

import os       from '../lib/kxk/os.js'
import karg     from '../lib/kxk/karg.js'
import slash    from '../lib/kxk/slash.js'
import knrd     from './knrd.js'
import build    from './build.js'
import childp   from 'child_process'
import path     from 'path'

args = karg """
    kk
        options                                 **
        build      build application            = false
        knrd       transpile kode, styl, pug    = false
        run        run application executable   = false
        rebuild    rebuild all targets          = false -R
        watch      watch directory for changes  = false
        info       show build status            = false
        test       run tests                    = false
        verbose    log more                     = false
        quiet      log nothing                  = false
        debug      log debug                    = false
    """

class kk
    
    @run: ○->
        
        sleep = (ms) ○-> await new Promise((r) => setTimeout(r, ms)); true
        
        while not os.loaded # todo: move this check somewhere else!
            await sleep 150
        
        if args.build ➜ build()
        if args.run   ➜ kk.spawn()
        if args.knrd  ➜ knrd args.options
            
    @spawn: ->
        
        dirname = path.dirname import.meta.url[7..]
        cmd = slash.join dirname, '../../Contents/MacOS/kakao'
        opt = shell:true
            
        childp.exec cmd, opt, (err, stdout, stderr) -> 
        
            if err ➜ error 'ERROR' err
                
            log   stdout if valid stdout
            error stderr if valid stderr
            
    @dir: (imp) -> imp.meta.url[7..]

global['kk'] = kk
    
export kk.run
