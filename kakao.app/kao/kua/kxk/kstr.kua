
kstr = {}

kstr.splice = s i n ... ->
    
    if i < 0 ➜ i = s.len+i+1
    if i > 1
        ⮐  string.sub(s 1 i-1) & (table.concat({...} '')) & string.sub(s i+n)
    elif i == 1
        ⮐  (table.concat({...} '')) & string.sub(s i+n)
        
kstr.shift  = s n=1        -> kstr.splice s 1 n
kstr.pop    = s n=1        -> kstr.splice s,-n n
kstr.lpad   = s n=1 c=" "  ->
kstr.lpad   = l s="" c=' ' ->
    while s.len < l ➜ s = c & s
    s
kstr.rpad   = l s="" c=' ' ->  
    while s.len < l ➜ s = s & c
    s
kstr.endsWith   = s o -> o == string.sub s s.len-o.len+1 s.len
kstr.startsWith = s o -> o == string.sub s 1 o.len
kstr.rtrim  = s c=' ' ->
    while s.len > 0 and (kstr.endsWith(s c) or kstr.endsWith(s "\n"))
        s = kstr.pop s
    s
kstr.ltrim  = s c=' ' -> 
    while s.len > 0 and (kstr.startsWith(s c) or kstr.startsWith(s "\n"))
        s = string.sub s 2
    s
kstr.trim   = s c=' ' -> kstr.ltrim kstr.rtrim(s,c) c
   
kstr.split = s sep ->
    r = {}
    pat = string.format "([^%s]+)" sep
    for part in string.gmatch s pat
        table.insert r part
    r
   
⮐  kstr