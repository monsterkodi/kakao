###
 0000000   000   000  000   0000000  000   000  000   000
000   000  000   000  000  000       000  000    000 000 
000 00 00  000   000  000  000       0000000      00000  
000 0000   000   000  000  000       000  000      000   
 00000 00   0000000   000   0000000  000   000     000   
###

use ../../kxk ▪ kstr slash post
use         ◆ cells input choices
use ../util ◆ prjcts
use ..      ◆ editor theme

function quicky

    @: @screen ->
        
        @name    = 'quicky'
        
        @cells   = new cells   @screen
        
        @input   = new input   @screen 'quicky_input'
        @choices = new choices @screen 'quicky_choices'
                
    show: =>
        
        x = parseInt @screen.cols/4
        y = parseInt @screen.rows/4
        w = parseInt @screen.cols/2
        h = parseInt @screen.rows/2
        
        c = min h @choices.num()
        
        @input.init    x+2   y+1   w-4  1
        @choices.init  x+2   y+3   w-4  c
        @cells.init    x     y     w    c+4
        
        @input.grabFocus()
        post.emit 'redraw'
        
    hide:   => @cells.rows = 0; post.emit 'focus' 'editor'; post.emit 'redraw'; true
    hidden: -> @cells.rows <= 0
    
    toggle: currentFile -> if @hidden() then @open(currentFile) else @hide()
    open: currentFile ->
        
        # lf 'quicky.open' currentFile prjcts.files(currentFile)
        
        @input.set '' #currentFile
        @choices.set prjcts.files(currentFile)
        @show()
        
    draw: ->
        
        ⮐ if @hidden()
        
        # ┏━┳━┓
        # ┃ ┃ ┃
        # ┣━╋━┫
        # ┃ ┃ ┃
        # ┗━┻━┛
        ff = theme.quicky_frame_fg
        fb = theme.quicky_frame_bg
        
        @cells.fill_rect 1 1 -2 -2 ' ' null fb
        @cells.fill_rect  1  0 -2  0 '━' ff fb
        @cells.fill_rect  0  1  0 -2 '┃' ff fb
        @cells.fill_rect -1  1 -1 -2 '┃' ff fb
        @cells.fill_rect  1  2 -2  2 '━' ff fb
        @cells.fill_rect  1 -1 -2 -1 '━' ff fb
        @cells.set  0  0 '┏' ff fb
        @cells.set -1  0 '┓' ff fb
        @cells.set  0  2 '┣' ff fb    
        @cells.set -1  2 '┫' ff fb    
        @cells.set  0 -1 '┗' ff fb
        @cells.set -1 -1 '┛' ff fb
        
        @input.draw()
        @choices.draw()
        
    # 000   000  00000000  000   000  
    # 000  000   000        000 000   
    # 0000000    0000000     00000    
    # 000  000   000          000     
    # 000   000  00000000     000     
    
    onKey: key event =>
        
        ⮐ if @hidden()
        
        switch event.combo 
            'esc'    then ⮐ @hide() if empty @input.state.s.selections
            'return' then ⮐ @hide()
        
        ⮐ true if @input.onKey key event
        ⮐ true if @choices.onKey key event
        true
        
    onMouse: type sx sy event =>
        
        ⮐ if @hidden()
        ⮐ true if @input.onMouse type sx sy event
        ⮐ true if @choices.onMouse type sx sy event
        true
        
    onWheel: event =>
        
        ⮐ if @hidden()
        
        ⮐ true if @input.onWheel event
        ⮐ true if @choices.onWheel event
        true

export quicky
