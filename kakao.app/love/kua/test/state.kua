###
     0000000  000000000   0000000   000000000  00000000  
    000          000     000   000     000     000       
    0000000      000     000000000     000     0000000   
         000     000     000   000     000     000       
    0000000      000     000   000     000     00000000  
###

use edit.tool.belt
use edit.state
use edit.mode

cells = {cols:55 rows:66}
s = state cells 'test'

txt = t     -> kseg.str(s.s.lines) ▸ t
cur = x y   -> s∙mainCursor() ▸ [x y]
mul = (...) -> s∙allCursors() ▸ array.from({...})
sel = (...) -> s∙allSelections() ▸ array.from({...})

▸ state
    
    text = """
        line 1
        line 2
        line 3
        """
    
    s.syntax.ext = 'kode'
    
    s∙loadSegls belt.seglsForText(text)
    
    txt text
    
    belt.seglsForText(text) ▸ belt.seglsForText(text) 
    belt.linesForText(text) ▸ ["line 1" "line 2" "line 3" ""]
    kseg.segls(belt.linesForText(text)) ▸ belt.seglsForText(text) 
    
    s∙loadLines belt.linesForText(text)
     
    txt text
    
    # 00000000  0000000    000  000000000  000  000   000   0000000   
    # 000       000   000  000     000     000  0000  000  000        
    # 0000000   000   000  000     000     000  000 0 000  000  0000  
    # 000       000   000  000     000     000  000  0000  000   000  
    # 00000000  0000000    000     000     000  000   000   0000000   
    
    ▸ editing
    
        s∙loadSegls belt.seglsForText(text)
        
        txt text
        
        s∙setMainCursor 2 2
        
        cur 2 2
        
        s∙insert 'x'
        
        txt """
            line 1
            lxine 2
            line 3
            """    
        cur 3 2

        s∙delete 'back'
        
        cur 2 2
        txt text

    ▸ moveCursors
    
        s∙loadSegls belt.seglsForText(text)
        
        s∙setMainCursor 2 2
        
        s∙moveCursors 'left'
        
        cur 1 2
        
        s∙moveCursors 'right' {jump:['ws' 'word' 'empty' 'punct']}
        
        cur 5 2
        
        s∙moveCursors 'right' {jump:['ws' 'word' 'empty' 'punct']}
        
        cur 6 2

        s∙moveCursors 'right' {jump:['ws' 'word' 'empty' 'punct']}
        
        cur 7 2

        s∙moveCursors 'right' {jump:['ws' 'word' 'empty' 'punct']}
        
        cur 8 2

        s∙moveCursors 'right' {jump:['ws' 'word' 'empty' 'punct']}
        
        cur 9 2

        s∙moveCursors 'left' {jump:['ws' 'word' 'empty' 'punct']}
        
        cur 7 2
        
        s∙moveCursors ['bos' 'ind_bol']
        
        cur 1 2
        
        s∙moveCursors ['eos' 'ind_eol']
        
        cur 7 2
        
    # 00     00   0000000   000   000  00000000        000      000  000   000  00000000   0000000  
    # 000   000  000   000  000   000  000             000      000  0000  000  000       000       
    # 000000000  000   000   000 000   0000000         000      000  000 0 000  0000000   0000000   
    # 000 0 000  000   000     000     000             000      000  000  0000  000            000  
    # 000   000   0000000       0      00000000        0000000  000  000   000  00000000  0000000   
    
    ▸ move lines
    
        s∙loadSegls belt.seglsForText(text)
        s∙setMainCursor 2 2
    
        s∙moveSelectionOrCursorLines 'up'
        cur 2 1
        txt """
            line 2
            line 1
            line 3
            """
        s∙moveSelectionOrCursorLines 'down'
        
        cur 2 2
        txt """
            line 1
            line 2
            line 3
            """
            
    ▸ insert
    
        s∙loadSegls belt.seglsForText(text)
        s∙setMainCursor 1 2
        s∙insert "\n"
        cur 1 3
        
        txt """
            line 1
            
            line 2
            line 3
            """

        s∙loadSegls belt.seglsForText(text)
        s∙setMainCursor 6 2
        s∙insert "\n"
        cur 1 3
        
        txt """
            line 1
            line 
            2
            line 3
            """
        
    # 00     00  000   000  000      000000000  000  00000000   000      00000000  
    # 000   000  000   000  000         000     000  000   000  000      000       
    # 000000000  000   000  000         000     000  00000000   000      0000000   
    # 000 0 000  000   000  000         000     000  000        000      000       
    # 000   000   0000000   0000000     000     000  000        0000000  00000000  
    
    ▸ multiple
    
        s∙loadSegls belt.seglsForText(text)
        
        s∙setMainCursor 1 2
        s∙expandCursors   'up'
        
        mul [1 1] [1 2]
        
        s∙expandCursors   'down'
        
        mul [1 1] [1 2] [1 3]
        
        s∙moveCursors 'left'
        
        mul [1 1] [1 2] [1 3]
        
        s∙moveCursorsAndSelect 'right'
        
        mul [2 1] [2 2] [2 3]
        sel [1 1 2 1] [1 2 2 2] [1 3 2 3]
        
        s∙moveCursors 'right' {jump:['ws' 'word' 'empty' 'punct']}
        
        mul [5 1] [5 2] [5 3]
        sel [1 1 2 1] [1 2 2 2] [1 3 2 3]
        
        s∙selectAllLines()
         
        mul [5 1] [5 2] [5 3]
        sel [1 1 1 4]

        s∙selectAllLines()
        
        mul [5 1] [5 2] [5 3]
        sel()
         
        s∙moveCursors 'right'
        s∙moveCursorsAndSelect 'left' {jump:['word']}
        sel [5 1 6 1] [5 2 6 2] [5 3 6 3]
        
        s∙moveCursorsAndSelect 'left' {jump:['word']}
        
        mul [1 1] [1 2] [1 3]
        sel [1 1 6 1] [1 2 6 2] [1 3 6 3]
        
        #s∙insert '\n' 
        #
        #mul [0 1] [0 3] [0 5]
        #sel()
        #txt """
        #    
        #    1
        #    
        #    2
        #    
        #    3
        #    """    
            
    # 000   000  000   000  000   0000000   0000000   0000000    00000000  
    # 000   000  0000  000  000  000       000   000  000   000  000       
    # 000   000  000 0 000  000  000       000   000  000   000  0000000   
    # 000   000  000  0000  000  000       000   000  000   000  000       
    #  0000000   000   000  000   0000000   0000000   0000000    00000000  
    
    #▸ unicode
    #
    #    text = """
    #        s = "🧑🌾"
    #        line 3
    #        """
    #    
    #    s.syntax.ext = 'kode'
    #    s∙loadSegls belt.seglsForText(text)
    #            
    #    txt text
    #    
    #    s∙toggleCommentAtSelectionOrCursorLines()
    #
    #    txt """
    #        # s = "🧑🌾"
    #        line 3
    #        """
    #    s∙toggleCommentAtSelectionOrCursorLines()
    #    
    #    txt text
    #    
    #    ▸ selection
    #    
    #        text = """
    #            'a'        ▸ 1
    #            '🔧'       ▸ 2
    #            '字'       ▸ 2
    #            '字的模块' ▸ 8
    #            '👁'        ▸ 1
    #            '🖌'        ▸ 1
    #            '🛠'        ▸ 1
    #            '🧑‍🌾'       ▸ 4
    #            '🔥'       ▸ 2
    #            '💩'       ▸ 2
    #            """
    #
    #        s.syntax.ext = 'kode'
    #        s∙loadSegls belt.seglsForText(text)
    #                
    #        txt text 
    #        
    #        s∙selectAllLines()
    #        
    #        sel [1 1 15 10]
    #        
    #        s∙moveCursorsToEndOfSelections()
    #        
    #        sel [1 1 15 10]
    #        mul [15 1] [15 2] [15 3] [15 4] [15 5] [15 6] [15 7] [15 8] [15 9] [15 10]
    #        
    #        s∙deselect()
    #        
    #        sel()
    #        mul [15 1] [15 2] [15 3] [15 4] [15 5] [15 6] [15 7] [15 8] [15 9] [15 10]
    #
    #        s∙moveCursors 'bol'
    #        
    #        mul [1 1] [1 2] [1 3] [1 4] [1 5] [1 6] [1 7] [1 8] [1 9] [1 10]
    #
    #        s∙selectMoreLines()
    #        
    #        sel [1 1 15 10]
    #        mul [15 1] [15 2] [15 3] [15 4] [15 5] [15 6] [15 7] [15 8] [15 9] [15 10]
    #
    #        s∙deselect()
    #        s∙delete 'back'
    #        
    #        txt """
    #            'a'        ▸ 
    #            '🔧'       ▸ 
    #            '字'       ▸ 
    #            '字的模块' ▸ 
    #            '👁'        ▸ 
    #            '🖌'        ▸ 
    #            '🛠'        ▸ 
    #            '🧑‍🌾'       ▸ 
    #            '🔥'       ▸ 
    #            '💩'       ▸ 
    #            """
    #
    #        s∙delete 'back'
    #        s∙moveCursors 'left'
    #        s∙delete 'back'
    #
    #        txt """
    #            'a'       ▸
    #            '🔧'      ▸
    #            '字'      ▸
    #            '字的模块'▸
    #            '👁'       ▸
    #            '🖌'       ▸
    #            '🛠'       ▸
    #            '🧑‍🌾'      ▸
    #            '🔥'      ▸
    #            '💩'      ▸
    #            """
    #            
    #        s∙delete 'back' true
    #
    #        txt """
    #            'a'▸
    #            '🔧'▸
    #            '字'▸
    #            '字的模块▸
    #            '👁'▸
    #            '🖌'▸
    #            '🛠'▸
    #            '🧑‍🌾'▸
    #            '🔥'▸
    #            '💩'▸
    #            """
            
    # 00000000  00     00  00000000   000000000  000   000  
    # 000       000   000  000   000     000      000 000   
    # 0000000   000000000  00000000      000       00000    
    # 000       000 0 000  000           000        000     
    # 00000000  000   000  000           000        000     
    
    ▸ empty
    
        # s.syntax.ext = 'kode'
        # s∙loadLines belt.linesForText('')
        # 
        # txt ''
        # cur 1 1
        
        #s∙insert '\n'
        #
        #txt '\n'
        #cur 1 2
        #
        #s.s.lines ▸ [[] []]
        
    # 0000000    00000000  000      00000000  000000000  00000000        0000000     0000000    0000000  000   000  
    # 000   000  000       000      000          000     000             000   000  000   000  000       000  000   
    # 000   000  0000000   000      0000000      000     0000000         0000000    000000000  000       0000000    
    # 000   000  000       000      000          000     000             000   000  000   000  000       000  000   
    # 0000000    00000000  0000000  00000000     000     00000000        0000000    000   000   0000000  000   000  
    
    ▸ delete back
    
        s.syntax.ext = 'kode'
        s∙loadLines belt.linesForText("1234567890")
        
        s∙setMainCursor 1 1 
        s∙delete 'back'
        txt "1234567890"
        mul [1 1]
        
        s∙setMainCursor 2 1 
        s∙delete 'back'
        txt "234567890"
        mul [1 1]
        
        s∙setMainCursor 5 1 
        s∙delete 'back'
        txt "23467890"
        mul [4 1]
        
        s∙delete 'back'
        txt "2367890"
        mul [3 1]
                        
        s∙loadSegls kseg.segls ("xxxx         .  2")
        s∙setMainCursor 17 1
        s∙delete 'back'
        mul [15 1]
        txt "xxxx         .2"
        
        text = """
            xxxx            1
            xxxx         .  2
            xxxx    .       3
            """
        
        s∙loadLines belt.linesForText(text)
        
        s∙setMainCursor 17 1 
        s∙expandCursors 'down'
        s∙expandCursors 'down'
        
        mul [17 1] [17 2] [17 3]
        
        s∙delete 'back'
        mul [15 1] [15 2] [15 3]
        txt """
            xxxx          1
            xxxx         .2
            xxxx    .     3
            """

        s∙delete 'back'
        mul [14 1] [14 2] [14 3]

        txt """
            xxxx         1
            xxxx         2
            xxxx    .    3
            """
            
        s∙delete 'back'
        mul [13 1] [13 2] [13 3]

        txt """
            xxxx        1
            xxxx        2
            xxxx    .   3
            """

        s∙delete 'back'
        mul [10 1] [10 2] [10 3]

        txt """
            xxxx     1
            xxxx     2
            xxxx    .3
            """
        
        s∙delete 'back'
        mul [9 1] [9 2] [9 3]

        txt """
            xxxx    1
            xxxx    2
            xxxx    3
            """
        
        s∙delete 'back'
        mul [5 1] [5 2] [5 3]

        txt """
            xxxx1
            xxxx2
            xxxx3
            """
                
    #  0000000  000       0000000   000   000  00000000         000      000  000   000  00000000   0000000  
    # 000       000      000   000  0000  000  000              000      000  0000  000  000       000       
    # 000       000      000   000  000 0 000  0000000          000      000  000 0 000  0000000   0000000   
    # 000       000      000   000  000  0000  000              000      000  000  0000  000            000  
    #  0000000  0000000   0000000   000   000  00000000         0000000  000  000   000  00000000  0000000   
    
    ▸ cloneSelectionAndCursorLines
    
        text = """
            line 1
            line 2
            line 3
            """
        s∙loadLines belt.linesForText(text)
        s∙cloneSelectionAndCursorLines 'down'
        
        txt """
            line 1
            line 1
            line 2
            line 3
            """
            
        mul [1 2]
            
        s∙expandCursors 'down'
        
        mul [1 2] [1 3]
        
        s∙cloneSelectionAndCursorLines 'down'
         
        txt """
            line 1
            line 1
            line 2
            line 1
            line 2
            line 3
            """
            
        mul [1 4] [1 5] 
        
        s∙expandCursors 'down'
        s∙moveCursors 'right'
        
        mul [2 4] [2 5] [2 6] 
        
        s∙cloneSelectionAndCursorLines 'down'
            
        txt """
            line 1
            line 1
            line 2
            line 1
            line 2
            line 3
            line 1
            line 2
            line 3
            """
            
    # 0000000    00000000  000            00000000    0000000   000   000   0000000   00000000   0000000  
    # 000   000  000       000            000   000  000   000  0000  000  000        000       000       
    # 000   000  0000000   000            0000000    000000000  000 0 000  000  0000  0000000   0000000   
    # 000   000  000       000            000   000  000   000  000  0000  000   000  000            000  
    # 0000000    00000000  0000000        000   000  000   000  000   000   0000000   00000000  0000000   
    
    ▸ deleteRanges
    
        text = """
            line 1
            line 2
            line 3
            """
            
        s∙loadLines belt.linesForText(text)
        s∙deleteRanges [[1 1 3 1]] 
        
        txt """
            ne 1
            line 2
            line 3
            """
            
        s∙deleteRanges [[3 1 3 2]]
    
        txt """
            nene 2
            line 3
            """
            
        s∙deleteRanges [[7 1 1 2]]
    
        txt """
            nene 2line 3
            """
        
    #       000   0000000   000  000   000        000      000  000   000  00000000   0000000  
    #       000  000   000  000  0000  000        000      000  0000  000  000       000       
    #       000  000   000  000  000 0 000        000      000  000 0 000  0000000   0000000   
    # 000   000  000   000  000  000  0000        000      000  000  0000  000            000  
    #  0000000    0000000   000  000   000        0000000  000  000   000  00000000  0000000   
    
    ▸ joinLines
    
        text = """
            line 1
            line 2
            line 3
            """
            
        s∙loadLines belt.linesForText(text)            
        s∙setMainCursor 1 1 
        mul [1 1]
        s∙joinLines()

        txt """
            line 1line 2
            line 3
            """
            