###
     0000000  00000000  000      000      
    000       000       000      000      
    000       0000000   000      000      
    000       000       000      000      
     0000000  00000000  0000000  0000000  
###

function cell

    #  0000000  00000000  000      000       0000000  
    # 000       000       000      000      000       
    # 000       0000000   000      000      0000000   
    # 000       000       000      000           000  
    #  0000000  00000000  0000000  0000000  0000000   
    
    @cells: cols rows ->
    
        lines = []
        for l in 0...rows
            cells = []
            for c in 0...cols
                cells.push bg:[] fg:[] char:' '
            lines.push cells
        lines

    # 00000000   0000000   00000000       000      000  000   000  00000000   0000000  
    # 000       000   000  000   000      000      000  0000  000  000       000       
    # 000000    000   000  0000000        000      000  000 0 000  0000000   0000000   
    # 000       000   000  000   000      000      000  000  0000  000            000  
    # 000        0000000   000   000      0000000  000  000   000  00000000  0000000   
    
    @cellsForLines: lines ->
        
        width = @widthOfLines lines
        cells = @cells width lines.length
        
        @stampLines cells lines

        cells
        
    #  0000000  000  0000000  00000000  
    # 000       000     000   000       
    # 0000000   000    000    0000000   
    #      000  000   000     000       
    # 0000000   000  0000000  00000000  
    
    @cellSize: cells -> [cells[0].length cells.length]
        
    #  0000000  000000000   0000000   00     00  00000000   
    # 000          000     000   000  000   000  000   000  
    # 0000000      000     000000000  000000000  00000000   
    #      000     000     000   000  000 0 000  000        
    # 0000000      000     000   000  000   000  000        
    
    @stampLines: cells lines x=0 y=0 ->
    
        ⮐ if empty lines
    
        [x y] = @pos x y
        
        for line,li in lines
            for char,ci in line
                cells[li][ci].char = char

    # 000   000  00000000    0000000   00000000   
    # 000 0 000  000   000  000   000  000   000  
    # 000000000  0000000    000000000  00000000   
    # 000   000  000   000  000   000  000        
    # 00     00  000   000  000   000  000        
    
    @wrapCellRect: cells x1 y1 x2 y2 ->

        [cols rows] = @cellSize cells
        
        x1 = cols + x1 if x1 < 0
        x2 = cols + x2 if x2 < 0

        y1 = rows + y1 if y1 < 0
        y2 = rows + y2 if y2 < 0
        
        [x1 y1 x2 y2]
        
    #  0000000  000       0000000   00     00  00000000   
    # 000       000      000   000  000   000  000   000  
    # 000       000      000000000  000000000  00000000   
    # 000       000      000   000  000 0 000  000        
    #  0000000  0000000  000   000  000   000  000        
    
    @clampCellRect: cells x1 y1 x2 y2 ->
        
        [cols rows] = @cellSize cells
        
        x1 = clamp 0 cols-1 x1
        x2 = clamp 0 cols-1 x2
        
        y1 = clamp 0 rows-1 y1
        y2 = clamp 0 rows-1 y2
        
        [x1 y1 x2 y2]

    # 000   000  000  000000000  000   000        0000000  000   000   0000000   00000000   
    # 000 0 000  000     000     000   000       000       000   000  000   000  000   000  
    # 000000000  000     000     000000000       000       000000000  000000000  0000000    
    # 000   000  000     000     000   000       000       000   000  000   000  000   000  
    # 00     00  000     000     000   000        0000000  000   000  000   000  000   000  
    
    @cellsWithChar: cells char ->
        
        res = []
        for row,y in cells
            for cell,x in row
                if cell.char == char
                    res.push pos:[x y] cell:cells[y][x]
        res
        
    # 000  000   000      00000000   00000000   0000000  000000000  
    # 000  0000  000      000   000  000       000          000     
    # 000  000 0 000      0000000    0000000   000          000     
    # 000  000  0000      000   000  000       000          000     
    # 000  000   000      000   000  00000000   0000000     000     
    
    @cellsInRect: cells x1 y1 x2 y2 ->
        
        [x1 y1 x2 y2] = @clampCellRect cells x1 y1 x2 y2
        
        res = []
        for y in y1..y2
            for x in x1..x2
                res.push pos:[x y] cell:cells[y][x]
        res
        
    # 000   000  00000000  000   0000000   000   000  0000000     0000000   00000000    0000000  
    # 0000  000  000       000  000        000   000  000   000  000   000  000   000  000       
    # 000 0 000  0000000   000  000  0000  000000000  0000000    000   000  0000000    0000000   
    # 000  0000  000       000  000   000  000   000  000   000  000   000  000   000       000  
    # 000   000  00000000  000   0000000   000   000  0000000     0000000   000   000  0000000   
    
    @cellNeighborsAtPos: cells x y xd=1 yd=1->
        
        [x1 y1 x2 y2] = @clampCellRect cells x-xd y-yd x+xd y+yd
        
        @cellsInRect cells x1 y1 x2 y2
        
export cell
