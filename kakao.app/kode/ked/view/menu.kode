###
    00     00  00000000  000   000  000   000    
    000   000  000       0000  000  000   000    
    000000000  0000000   000 0 000  000   000    
    000 0 000  000       000  0000  000   000    
    000   000  00000000  000   000   0000000     
###

use ../../kxk ▪ kstr slash post noon
use ../util ◆ prjcts util
use ..      ◆ editor theme
use         ◆ cells input choices greeter inputchoice

function menu extends inputchoice

    @: @screen ->
        
        super @screen 'menu'
        
        @greeter = new greeter @screen

    #  0000000  000   000   0000000   000   000
    # 000       000   000  000   000  000 0 000
    # 0000000   000000000  000   000  000000000
    #      000  000   000  000   000  000   000
    # 0000000   000   000   0000000   00     00

    show: =>

        @greeter.show @greet
        super()

    hide:    => 
    
        delete @greet
        super()
    
    # 000       0000000   000   000   0000000   000   000  000000000  
    # 000      000   000   000 000   000   000  000   000     000     
    # 000      000000000    00000    000   000  000   000     000     
    # 000      000   000     000     000   000  000   000     000     
    # 0000000  000   000     000      0000000    0000000      000     
    
    layout: =>

        w = 16
        c = @choices.num()
        g = @greet ? @greeter.cells.rows : 0
        h = c + 4 + g
        x = int @screen.cols/2 - w/2
        y = int @screen.rows/2 - h/2 + g

        @input.init    x+2   y+1   w-4  1
        @choices.init  x+2   y+3   w-3  c
        @cells.init    x     y     w    c+4

    #  0000000   00000000   00000000  000   000
    # 000   000  000   000  000       0000  000
    # 000   000  00000000   0000000   000 0 000
    # 000   000  000        000       000  0000
    #  0000000   000        00000000  000   000

    open: @greet=false -> 
        
        items = util.linesForText
            """
            open ...
            recent ...
            session ...
            help
            quit
            """
            
        items.splice items.length-2 0 'about' if not @greet
            
        ccol = int(@screen.cols/2) - 5

        @input.set ''
        @choices.set items
        @choices.state.selectLine 0
        @choices.frontCursor()
        @choices.state.setView [0 0]
        
        post.emit 'greet' if @greet
        
        @show()

    # 000  000   000  00000000   000   000  000000000  
    # 000  0000  000  000   000  000   000     000     
    # 000  000 0 000  00000000   000   000     000     
    # 000  000  0000  000        000   000     000     
    # 000  000   000  000         0000000      000     
    
    applyChoice: ->
        
        current = @choices.current()
        
        switch current
            'about'    ➜ ⮐ @open true
            'quit'     ➜ post.emit 'quit' ; ⮐ redraw:false
            'open ...' ➜ post.emit 'quicky.dir' process.cwd()
            
        # lf 'menu choice' current
        
        @hide()
        
    onChoiceAction: choice action => 
    
        @applyChoice() if action in ['space' 'right']
                    
    currentChoice: -> trim @choices.current()
        
    # 0000000    00000000    0000000   000   000
    # 000   000  000   000  000   000  000 0 000
    # 000   000  0000000    000000000  000000000
    # 000   000  000   000  000   000  000   000
    # 0000000    000   000  000   000  00     00

    draw: ->

        ⮐ if @hidden()
        
        @layout()

        @drawBackground()
        @greeter.draw() if @greet
        
        super()

export menu
