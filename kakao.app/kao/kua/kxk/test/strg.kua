###
     ███████  █████████  ████████    ███████          █████████  ████████   ███████  █████████  
    ███          ███     ███   ███  ███                  ███     ███       ███          ███     
    ███████      ███     ███████    ███  ████            ███     ███████   ███████      ███     
         ███     ███     ███   ███  ███   ███            ███     ███            ███     ███     
    ███████      ███     ███   ███   ███████             ███     ████████  ███████      ███     
###
use kxk/kxk

▸ strg

    ▸ init
    
        $strg()                ▸ ""
        $strg("a")             ▸ "a"
        $strg("a" "b")         ▸ "ab"
        $strg("a" "b" 1 2 1/2) ▸ "ab120.5"
        
    ▸ find
    
        strg("")∙find("")       ▸ -1
        strg("")∙find("x")      ▸ -1
        strg("a  a")∙find("x")  ▸ -1
        strg("a  a")∙find("a")  ▸ 1
        strg("a  3")∙find(" ")  ▸ 2
        strg("a  3")∙find("3")  ▸ 4
        
    ▸ indexof
    
        strg("a  x")∙indexof("  ") ▸ 2
        
    ▸ rindexof
    
        strg("a  x  b")∙rindexof("  ") ▸ 5

    ▸ rfind

        strg("")∙rfind("")       ▸ -1
        strg("")∙rfind("x")      ▸ -1
        strg("a  3")∙rfind("a")  ▸ 1
        strg("a  3")∙rfind(" ")  ▸ 3
        strg("3  3")∙rfind("3")  ▸ 4
        
    ▸ slice
    
        $strg("a  b")∙slice(1 2) ▸ "a "
        $strg("a  b")∙slice(1 3) ▸ "a  "
        $strg("a  b")∙slice(1 4) ▸ "a  b"
        $strg("a  b")∙slice(1)   ▸ "a  b"
        $strg("a  b")∙slice(3)   ▸ " b"
        
    ▸ add
    
        itr = 100000
        s = strg "a"
        s += "b"
        s∙num()                 ▸ 2
        $s ▸ "ab"
        for i in 0..itr
            s += "c"
        s∙len()                 ▸ itr+3
        s∙num()                 ▸ itr+3
        
    ▸ flatten
    
        s = strg "ab"
        s += "cde"
        s.buff.len              ▸ 5
        s.frags.len             ▸ 0
        $s                      ▸ "abcde"
        s∙flatten()
        s.buff                  ▸ nil
        s.frags.len             ▸ 1
        $s                      ▸ "abcde"
   
    ▸ startsWith
    
        s = strg "abcde"    
        s∙startsWith "b"        ▸ false
        s∙startsWith "a"        ▸ true
        s∙startsWith "ab"       ▸ true
        s∙startsWith "abcde"    ▸ true
        s∙startsWith "abcdef"   ▸ false

    ▸ endsWith
    
        s = strg "abcde"    
        s∙endsWith "b"          ▸ false
        s∙endsWith "e"          ▸ true
        s∙endsWith "abcde"      ▸ true
        s∙endsWith "xabcde"     ▸ false
    
    ▸ trim
    
        s = strg "  bb c  "     
        $s∙trim()               ▸ "bb c"
        s = strg "  bb c  "     
        $s∙ltrim()              ▸ "bb c  "
        s = strg "  bb c  "     
        $s∙rtrim()              ▸ "  bb c"
    
    ▸ num
    
        s = strg "a"
        s∙num()                 ▸ 1
        s += "bc"
        s∙num()                 ▸ 3
        
    ▸ index
    
        s = strg "abc"
        s[1]                    ▸ "a"
        s[2]                    ▸ "b"
        s[3]                    ▸ "c"
        
    ▸ indent
    
        s = strg ""             
        s∙indent()              ▸ 0
        s = strg "x"             
        s∙indent()              ▸ 0
        s = strg " x"             
        s∙indent()              ▸ 1
        s = strg "  x  "             
        s∙indent()              ▸ 2
        s = strg "x  "             
        s∙indent()              ▸ 0
        
    ▸ number
    
        s = strg "10"
        s∙number()              ▸ 10

        s = strg "10z"
        s∙number()              ▸ nil

        s = strg "1 2"
        s∙number()              ▸ nil

        s = strg "1.0"
        s∙number()              ▸ 1

        s = strg "1.5"
        s∙number()              ▸ 1.5

        s = strg "1.5.0"
        s∙number()              ▸ nil

    ▸ lines
    
        s = strg "1\n2\n3"
        l = s∙lines()
        $l[1]                   ▸ "1"
        $l[2]                   ▸ "2"
        $l[3]                   ▸ "3"
        l[1] += "a"
        $l[1]                   ▸ "1a"
        l[2] += "b"
        $l[2]                   ▸ "2b"
        
    ▸ unicode
    
        s = strg "▸"
        s∙num()                 ▸ 1
        s∙len()                 ▸ 3
        s += "●"
        s∙num()                 ▸ 2
        s∙len()                 ▸ 6
        