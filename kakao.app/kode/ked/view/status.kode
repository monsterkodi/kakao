###
 0000000  000000000   0000000   000000000  000   000   0000000  
000          000     000   000     000     000   000  000       
0000000      000     000000000     000     000   000  0000000   
     000     000     000   000     000     000   000       000  
0000000      000     000   000     000      0000000   0000000   
###

use ..      ◆ theme
use         ◆ view
use ../util ◆ color util

function status extends view

    @: screen @state ->

        super screen 'status'
        
        @gutter = 4
        @file = ''
        @drawTime = ''
        
    # 0000000    00000000    0000000   000   000  
    # 000   000  000   000  000   000  000 0 000  
    # 000   000  0000000    000000000  000000000  
    # 000   000  000   000  000   000  000   000  
    # 0000000    000   000  000   000  00     00  
    
    draw: =>
        
        x      = 0
        y      = 0
        cursor = @state.mainCursor()
        cols   = @cells.cols
        fnl    = @file.length
        dt     = @drawTime
        dtl    = dt.length
        rdo    = @state.hasRedo()
        dty    = @state.isDirty()
        
        set = x char fg bg => 
            if valid fg and fg[0] != '#' ➜ fg = theme[fg]
            if valid bg and bg[0] != '#' ➜ bg = theme[bg]
            @cells.set x y char fg bg
            1
        add = char fg bg => x += set x char fg bg
        
        # draw the left edge of the status bar
        
        add '' 'status_dark' 'gutter'
        
        # draw the column number
        
        colno = rpad @gutter-1 "#{cursor[0]+1}"
        for ci in 1...@gutter
            fg = cursor[0] ? 'status_fg' : 'column_fg'
            fg = 'status_empty' if util.isLinesPosOutside @state.s.lines cursor 
            add (ci-1 < colno.length) ? colno[ci-1] : ' ' fg 'status_dark'

        # draw the separator after the column number
            
        add '' 'status' 'status_dark'
              
        # draw the dirty indicator
        
        add dty ? '' : '' dty ? 'status_dirty' : 'status_dark' 'status'
        
        # draw the file name
        
        add ' ' 'status_fg' 'status'
        
        x += @cells.draw_path x y @file theme.status

        # draw the redo indicator
        
        add ' ' 'status_fg' 'status'
        rcol = rdo ? 'status_redo' : dty ? 'status_dirty' : 'status_dark'
        add rdo ? '' : '' rcol 'status'
             
        # draw the right edge of the file name section
        
        add '' 'status' 'status_dark'
        add ' ' null 'status_dark'
        
        # draw the selection count 
        
        if @state.s.selections.length

            sel = " #{@state.s.selections.length} sel "
             
            for i in 0...sel.length
                add sel[i] (i<sel.length-4) ? 'status_sel' : 'status_fg_dim' 'status_dark'

        # draw the cursor count 
            
        if @state.s.cursors.length > 1

            cur = " #{@state.s.cursors.length} cur "
             
            for i in 0...cur.length
                add cur[i] (i<cur.length-4) ? 'status_cur' : 'status_fg_dim' 'status_dark'

        # draw the highlight count
                
        if @state.s.highlights.length

            hil = " #{@state.s.highlights.length} hil "
             
            for i in 0...hil.length
                add hil[i] (i<hil.length-4) ? 'status_hil' : 'status_fg_dim' 'status_dark'
                
        # draw the time if there's enough space
        
        if cols-dtl-2 >= x
            # fill the space up to the time
            for ci in x...cols-dtl-2
                add ' ' null 'status_dark'
            
            add '' 'status' 'status_dark'
             
            for i in 0...dtl
                fg = i < dtl-3 ? 'status_fg' : 'status_fg_dim'
                add dt[i] fg 'status'
             
            # draw the final edge of the status bar
            
            add '' 'status' 'editor_empty'
    
        else
            # fill the remaining space
            for ci in x...cols-dtl-2
                add ' ' null 'status_dark'
            
export status

