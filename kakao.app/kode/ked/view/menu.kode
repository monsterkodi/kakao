###
    00     00  00000000  000   000  000   000    
    000   000  000       0000  000  000   000    
    000000000  0000000   000 0 000  000   000    
    000 0 000  000       000  0000  000   000    
    000   000  00000000  000   000   0000000     
###

use ../../kxk ▪ kstr slash post noon
use ../util ◆ prjcts util
use ..      ◆ editor theme
use         ◆ cells input choices greeter

function menu

    @: @screen ->
        
        @name    = 'menu'
        
        @cells   = new cells   @screen
        @greeter = new greeter @screen
        @input   = new input   @screen 'quicky_input'
        @choices = new choices @screen 'quicky_choices'

        @input.on 'changed' @onInputChanged

    #  0000000  000   000   0000000   000   000
    # 000       000   000  000   000  000 0 000
    # 0000000   000000000  000   000  000000000
    #      000  000   000  000   000  000   000
    # 0000000   000   000   0000000   00     00

    show: =>

        @greeter.show @greet
        @layout()
        @input.grabFocus()

    hide:    => @cells.rows = 0; delete @greet; post.emit 'focus' 'editor'; post.emit 'redraw'; true
    hidden:  -> @cells.rows <= 0
    visible: -> @cells.rows > 0
    
    # 000       0000000   000   000   0000000   000   000  000000000  
    # 000      000   000   000 000   000   000  000   000     000     
    # 000      000000000    00000    000   000  000   000     000     
    # 000      000   000     000     000   000  000   000     000     
    # 0000000  000   000     000      0000000    0000000      000     
    
    layout: =>

        w = 16
        c = @choices.num()
        g = @greet ? @greeter.cells.rows : 0
        h = c + 4 + g
        x = int @screen.cols/2 - w/2
        y = int @screen.rows/2 - h/2 + g

        @input.init    x+2   y+1   w-4  1
        @choices.init  x+2   y+3   w-3  c
        @cells.init    x     y     w    c+4

    #  0000000   00000000   00000000  000   000
    # 000   000  000   000  000       0000  000
    # 000   000  00000000   0000000   000 0 000
    # 000   000  000        000       000  0000
    #  0000000   000        00000000  000   000

    toggle: -> if @hidden() then @open() else @hide()
    
    open: @greet=false -> 
        
        items = util.linesForText
            """
            open ...
            recent ...
            session ...
            help
            quit
            """
            
        items.splice items.length-2 0 'about' if not @greet
            
        ccol = int(@screen.cols/2) - 5

        @input.set ''
        @choices.set items
        @choices.state.selectLine 0
        @choices.state.setMainCursor @choices.state.s.lines[0].length 0
        @choices.state.setView [0 0]
        
        post.emit 'greet' if @greet
        
        @show()

    # 000  000   000  00000000   000   000  000000000  
    # 000  0000  000  000   000  000   000     000     
    # 000  000 0 000  00000000   000   000     000     
    # 000  000  0000  000        000   000     000     
    # 000  000   000  000         0000000      000     
    
    onInputChanged: text =>

        @choices.filter text
        @choices.state.selectLine 0
        @choices.state.setMainCursor @choices.state.s.lines[0].length 0
        @layout()

    applyChoice: ->
        
        current = @choices.current()
        
        switch current
            'about'    ➜ ⮐ @open true
            'quit'     ➜ post.emit 'quit' ; ⮐ redraw:false
            'open ...' ➜ post.emit 'quicky.dir' process.cwd()
            
        lf 'menu choice' current
        
        @hide()
                    
    currentChoice: -> trim @choices.current()
        
    # 0000000    00000000    0000000   000   000
    # 000   000  000   000  000   000  000 0 000
    # 000   000  0000000    000000000  000000000
    # 000   000  000   000  000   000  000   000
    # 0000000    000   000  000   000  00     00

    draw: ->

        ⮐ if @hidden()
        
        @layout()

        fg = theme.quicky_frame_fg
        bg = theme.quicky_frame_bg

        @cells.draw_frame 0 0 -1 -1 fg:fg bg:bg hdiv:[2]

        @greeter.draw() if @greet
        @input.draw()
        @choices.draw()

    #  0000000  00000000  000      00000000   0000000  000000000
    # 000       000       000      000       000          000
    # 0000000   0000000   000      0000000   000          000
    #      000  000       000      000       000          000
    # 0000000   00000000  0000000  00000000   0000000     000

    moveSelection: dir ->

        switch dir
            'down'  ➜ @choices.state.selectNextLine()
            'up'    ➜ @choices.state.selectPrevLine()

        @input.set @choices.state.selectedText()
        @input.selectAll()

    # 000   000  00000000  000   000
    # 000  000   000        000 000
    # 0000000    0000000     00000
    # 000  000   000          000
    # 000   000  00000000     000

    onKey: key event =>

        ⮐ if @hidden()

        switch event.combo
            'esc'       ➜ ⮐ @hide()
            'return'    ➜ ⮐ @applyChoice()
            'up' 'down' ➜ ⮐ @moveSelection event.combo if @input.hasFocus()

        ⮐ true if @input.onKey key event
        ⮐ true if @choices.onKey key event
        true

    onMouse: type sx sy event =>

        ⮐ if @hidden()
        ⮐ true if @input.onMouse type sx sy event
        ⮐ true if @choices.onMouse type sx sy event
        true

    onWheel: event =>

        ⮐ if @hidden()

        ⮐ true if @input.onWheel event
        ⮐ true if @choices.onWheel event
        true
    
export menu
