###
 0000000   000   000  000000000  000000000  00000000  00000000   
000        000   000     000        000     000       000   000  
000  0000  000   000     000        000     0000000   0000000    
000   000  000   000     000        000     000       000   000  
 0000000    0000000      000        000     00000000  000   000  
###

use ../../util  ◆ prof 
use ../../theme ◆ color theme 
use ../base     ◆ view

function gutter extends view

    @: screen @state ->
        
        super screen @state.owner() + '.gutter'
        
        @setColor 'bg'                     theme.gutter
        @setColor 'bg_selected'            theme.gutter_selected
        @setColor 'bg_fully_selected'      theme.gutter_fully_selected
        @setColor 'linenr'                 theme.linenr
        @setColor 'cursor_main'            theme.editor_cursor_main
        @setColor 'cursor_multi'           theme.editor_cursor_multi
        @setColor 'selection'              theme.editor_selection
        @setColor 'selection_line'         theme.editor_selection_line
        @setColor 'highlight'              theme.editor_highlight
        
    lineno: y ->
                
        lineno = lpad @cells.cols-1 y+1
        lineno += ' '
        lineno
        
    draw: ->
        
        mainCursor = @state.mainCursor()
        
        for row in 0...@cells.rows
                        
            y = @state.s.view[1] + row
            
            lineno = @lineno y
            
            hasCursor   = @state.isAnyCursorInLine y
            selected    = @state.isSelectedLine y
            highlighted = @state.isHighlightedLine y
            spansel     = @state.isSpanSelectedLine y
            
            for c,i in lineno
                
                col = i
                if col < @cells.rows
                    
                    fg = if
                        y == mainCursor[1] ➜ color.darken(@color.cursor_main @state.hasFocus?1:0.5)
                        hasCursor          ➜ @color.cursor_multi
                        spansel            ➜ @color.selection
                        selected           ➜ @color.selection_line
                        highlighted        ➜ @color.highlight
                                           ➜ @color.linenr
                                           
                    fg = color.darken fg if (selected or hasCursor or highlighted) and not @cells.screen.t.hasFocus
                                                
                    bg = if 
                        spansel    ➜ @color.bg_selected
                        selected   ➜ @color.bg_fully_selected
                                   ➜ @color.bg
                                 
                    bg = color.darken bg if selected and not @cells.screen.t.hasFocus
                    
                    @cells.set col row (y<@state.s.lines.length) ? c : ' ' fg bg

export gutter