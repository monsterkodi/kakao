
# 000   000  000000000  000  000      
# 000   000     000     000  000      
# 000   000     000     000  000      
# 000   000     000     000  000      
#  0000000      000     000  0000000  

use ../util â—† util
use ../../kxk â–ª kseg

global.lf = args... -> log args.map((a) -> "#{a}").join(' ')

â–¸ util

    â–¸ cells
        
        l = util.linesForText """
            012
            abc
            XYZ
            """
            
        cells = util.cellsForLines l
        
        rect = util.cellsInRect cells 0 0 1 1
        for c in rect
            c.cell.fg = [255 0 0]
            
        cells[0][0].fg â–¸ [255 0 0]
        cells[1][1].fg â–¸ [255 0 0]
        cells[2][2].fg â–¸ []
        
        util.clampCellRect cells 0 0 1 1 â–¸ [0 0 1 1]
        util.clampCellRect cells -1 -1 1 1 â–¸ [0 0 1 1]
        
        util.cellsInRect(cells 0 0 1 1).map((n) -> n.cell.char) â–¸ ['0' '1' 'a' 'b']
        util.cellsInRect(cells 1 1 1 1).map((n) -> n.cell.char) â–¸ ['b']
        util.cellsInRect(cells 0 0 2 0).map((n) -> n.cell.char) â–¸ ['0' '1' '2']
        util.cellsInRect(cells 1 2 2 2).map((n) -> n.cell.char) â–¸ ['Y' 'Z']
        
        util.cellNeighborsAtPos(cells 0 0).map((n) -> n.cell.char) â–¸ ['0' '1' 'a' 'b']

    â–¸ extendLineRangesToPosition 
    
        lines = ['123' '45' '6']
    
        util.extendLineRangesFromPositionToPosition lines [] [0 0] [0 2] â–¸ [[0 0 0 2]]
        util.extendLineRangesFromPositionToPosition lines [[0 0 1 0] [2 0 3 0]] [1 1] [0 2] â–¸ [[0 0 1 0] [2 0 3 0] [1 1 0 2]]

    â–¸ jumpDelta
    
        line = '1  '
        
        util.jumpDelta line 0  1 ['empty'] â–¸ 1
        util.jumpDelta line 1  1 ['empty'] â–¸ 1
        util.jumpDelta line 2  1 ['empty'] â–¸ 1
        util.jumpDelta line 3  1 ['empty'] â–¸ 1
        util.jumpDelta line 4  1 ['empty'] â–¸ 1

        line = '    a = b ->  '
    
        util.jumpDelta line 0  1 ['ws'] â–¸  4
        util.jumpDelta line 1  1 ['ws'] â–¸  3
        util.jumpDelta line 2  1 ['ws'] â–¸  2
        util.jumpDelta line 3  1 ['ws'] â–¸  1
        util.jumpDelta line 4  1 ['ws'] â–¸  1
        util.jumpDelta line 5  1 ['ws'] â–¸  1
        util.jumpDelta line 6  1 ['ws'] â–¸  1
        util.jumpDelta line 7  1 ['ws'] â–¸  1
        util.jumpDelta line 8  1 ['ws'] â–¸  1
        util.jumpDelta line 9  1 ['ws'] â–¸  1
        util.jumpDelta line 10 1 ['ws'] â–¸  1
        util.jumpDelta line 11 1 ['ws'] â–¸  1
        util.jumpDelta line 12 1 ['ws'] â–¸  2
               
        line = '  ab += cd ;;  '

        util.jumpDelta line 0   1 ['word'] â–¸  1
        util.jumpDelta line 1   1 ['word'] â–¸  1
        util.jumpDelta line 2   1 ['word'] â–¸  2
        util.jumpDelta line 3   1 ['word'] â–¸  1
        util.jumpDelta line 4   1 ['word'] â–¸  1
        util.jumpDelta line 5   1 ['word'] â–¸  1
        util.jumpDelta line 6   1 ['word'] â–¸  1
        util.jumpDelta line 7   1 ['word'] â–¸  1
        util.jumpDelta line 8   1 ['word'] â–¸  2
        util.jumpDelta line 9   1 ['word'] â–¸  1
        util.jumpDelta line 10  1 ['word'] â–¸  1
        util.jumpDelta line 11  1 ['word'] â–¸  1

        util.jumpDelta line 0   1 ['punct'] â–¸  1
        util.jumpDelta line 1   1 ['punct'] â–¸  1
        util.jumpDelta line 2   1 ['punct'] â–¸  1
        util.jumpDelta line 3   1 ['punct'] â–¸  1
        util.jumpDelta line 4   1 ['punct'] â–¸  1
        util.jumpDelta line 5   1 ['punct'] â–¸  2
        util.jumpDelta line 6   1 ['punct'] â–¸  1
        util.jumpDelta line 7   1 ['punct'] â–¸  1
        util.jumpDelta line 8   1 ['punct'] â–¸  1
        util.jumpDelta line 9   1 ['punct'] â–¸  1
        util.jumpDelta line 10  1 ['punct'] â–¸  1
        util.jumpDelta line 11  1 ['punct'] â–¸  2

        util.jumpDelta line 0   1 ['ws' 'word' 'punct'] â–¸  2
        util.jumpDelta line 1   1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 2   1 ['ws' 'word' 'punct'] â–¸  2
        util.jumpDelta line 3   1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 4   1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 5   1 ['ws' 'word' 'punct'] â–¸  2
        util.jumpDelta line 6   1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 7   1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 8   1 ['ws' 'word' 'punct'] â–¸  2
        util.jumpDelta line 9   1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 10  1 ['ws' 'word' 'punct'] â–¸  1
        util.jumpDelta line 11  1 ['ws' 'word' 'punct'] â–¸  2
        
        util.jumpDelta line 0   -1 ['ws' 'word' 'punct'] â–¸   0
        util.jumpDelta line 1   -1 ['ws' 'word' 'punct'] â–¸  -1
        util.jumpDelta line 2   -1 ['ws' 'word' 'punct'] â–¸  -2
        util.jumpDelta line 3   -1 ['ws' 'word' 'punct'] â–¸  -1
        util.jumpDelta line 4   -1 ['ws' 'word' 'punct'] â–¸  -2
        util.jumpDelta line 5   -1 ['ws' 'word' 'punct'] â–¸  -1
        util.jumpDelta line 6   -1 ['ws' 'word' 'punct'] â–¸  -1
        util.jumpDelta line 7   -1 ['ws' 'word' 'punct'] â–¸  -2
        util.jumpDelta line 8   -1 ['ws' 'word' 'punct'] â–¸  -1
        util.jumpDelta line 9   -1 ['ws' 'word' 'punct'] â–¸  -1
        util.jumpDelta line 10  -1 ['ws' 'word' 'punct'] â–¸  -2
        util.jumpDelta line 11  -1 ['ws' 'word' 'punct'] â–¸  -1
        
        line = '  '
        
        util.jumpDelta line 5  -1 ['empty'] â–¸ -3
        util.jumpDelta line 4  -1 ['empty'] â–¸ -2
        util.jumpDelta line 3  -1 ['empty'] â–¸ -1
        
        util.jumpDelta line 5  -1 ['ws'] â–¸ -1
        util.jumpDelta line 4  -1 ['ws'] â–¸ -1
        util.jumpDelta line 3  -1 ['ws'] â–¸ -1
        util.jumpDelta line 2  -1 ['ws'] â–¸ -2
        
    â–¸ isPosInsideRange
    
        util.isPosInsideRange [0 0]  [0 0  1 0] â–¸ true
        util.isPosInsideRange [0 1]  [0 0  1 0] â–¸ false
    
        util.isPosInsideRange [7 1]  [5 2 10 2] â–¸ false
        util.isPosInsideRange [7 2]  [5 2 10 2] â–¸ true
        util.isPosInsideRange [5 2]  [5 2 10 2] â–¸ true
        util.isPosInsideRange [10 2] [5 2 10 2] â–¸ false
        util.isPosInsideRange [4 2]  [5 2 10 2] â–¸ false
        util.isPosInsideRange [11 2] [5 2 10 2] â–¸ false
        util.isPosInsideRange [7 3]  [5 2 10 2] â–¸ false
        
    â–¸ normalizeRanges
    
        util.normalizeRanges [] â–¸ []
        
        util.normalizeRanges [[0 1 3 4]] â–¸ [[0 1 3 4]]
        util.normalizeRanges [[0 4 3 1]] â–¸ [[3 1 0 4]]
        util.normalizeRanges [[3 1 0 4]] â–¸ [[3 1 0 4]]
        util.normalizeRanges [[3 4 2 4]] â–¸ [[2 4 3 4]]
        
        util.normalizeRanges [[0 0 9 9] [1 1 2 2]] â–¸ [[0 0 9 9] [1 1 2 2]]
        util.normalizeRanges [[1 1 2 2] [0 0 9 9]] â–¸ [[0 0 9 9] [1 1 2 2]]
        
    â–¸ mergeLineRanges
    
        lines = ['1234567890' '1234567890' '1234567890']
    
        util.mergeLineRanges lines [[0 0 9 9] [1 1 2 2]] â–¸ [[0 0 9 9]]
        util.mergeLineRanges lines [[1 1 2 2] [0 0 9 9]] â–¸ [[0 0 9 9]]
        util.mergeLineRanges lines [[1 1 2 2] [0 0 9 9] [0 0 10 0] [0 8 9 9]] â–¸ [[0 0 9 9]]
        
        util.mergeLineRanges lines [[4 0 6 0] [8 0 10 0]] â–¸ [[4 0 6 0] [8 0 10 0]]
        util.mergeLineRanges lines [[4 0 6 0] [7 0 10 0]] â–¸ [[4 0 6 0] [7 0 10 0]]
        util.mergeLineRanges lines [[4 0 6 0] [6 0 10 0]] â–¸ [[4 0 10 0]]
        util.mergeLineRanges lines [[4 0 6 0] [5 0 10 0]] â–¸ [[4 0 10 0]]
        
        util.mergeLineRanges lines [[4 1 10 1] [0 2 4 2]] â–¸ [[4 1 4 2]]

    â–¸ rangeOfClosestWordToPos
    
        lines = ['1 2  3   4' '   ab  ghij']
        
        util.rangeOfClosestWordToPos lines [0 0] â–¸ [0 0 1 0]
        util.rangeOfClosestWordToPos lines [1 0] â–¸ [2 0 3 0]
        util.rangeOfClosestWordToPos lines [2 0] â–¸ [2 0 3 0]
        util.rangeOfClosestWordToPos lines [3 0] â–¸ [2 0 3 0]
        util.rangeOfClosestWordToPos lines [4 0] â–¸ [5 0 6 0]

        util.rangeOfClosestWordToPos lines [0 1] â–¸ [3 1 5 1]
        util.rangeOfClosestWordToPos lines [5 1] â–¸ [3 1 5 1]
        util.rangeOfClosestWordToPos lines [6 1] â–¸ [7 1 11 1]
        
    â–¸ rangeOfWordOrWhitespaceLeftToPos
    
        lines = ['1 2  3   4' '   ab  ghij']
        
        util.rangeOfWordOrWhitespaceLeftToPos lines [0 0] â–¸ undefined
        util.rangeOfWordOrWhitespaceLeftToPos lines [1 0] â–¸ [0 0 1 0]
        util.rangeOfWordOrWhitespaceLeftToPos lines [1 1] â–¸ [0 1 1 1]
        util.rangeOfWordOrWhitespaceLeftToPos lines [3 1] â–¸ [0 1 3 1]
        
        segls = kseg.segls lines.join('\n')
        
        util.rangeOfWordOrWhitespaceLeftToPos segls [0 0] â–¸ undefined
        util.rangeOfWordOrWhitespaceLeftToPos segls [1 0] â–¸ [0 0 1 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [1 1] â–¸ [0 1 1 1]
        util.rangeOfWordOrWhitespaceLeftToPos segls [3 1] â–¸ [0 1 3 1]
        
        segls = kseg.segls '  ðŸ§‘ðŸŒ¾  abðŸŒ¾cde'
        
        util.rangeOfWordOrWhitespaceLeftToPos segls [1 0] â–¸ [0 0 1 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [2 0] â–¸ [0 0 2 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [3 0] â–¸ [2 0 3 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [4 0] â–¸ [2 0 3 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [5 0] â–¸ [3 0 4 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [6 0] â–¸ [3 0 4 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [7 0] â–¸ [4 0 5 0]
        util.rangeOfWordOrWhitespaceLeftToPos segls [8 0] â–¸ [4 0 6 0]
        
    â–¸ isFullLineRange
    
        lines = ['' '124' 'abcdef']
        
        util.isFullLineRange lines [0 0 0 1] â–¸ true
        util.isFullLineRange lines [0 0 0 0] â–¸ true
        util.isFullLineRange lines [0 1 3 1] â–¸ true
        util.isFullLineRange lines [0 1 5 1] â–¸ true
        util.isFullLineRange lines [0 1 2 1] â–¸ false
        util.isFullLineRange lines [1 1 3 1] â–¸ false
        
    â–¸ isSpanLineRange
    
        lines = ['' '124' 'abcdef']
        
        util.isSpanLineRange lines [0 1 1 1] â–¸ true
        util.isSpanLineRange lines [0 0 0 0] â–¸ false
        util.isSpanLineRange lines [0 1 3 1] â–¸ false
        util.isSpanLineRange lines [1 1 1 2] â–¸ false
        
    â–¸ isPosAfterSpan
    
        util.isPosAfterSpan [0 0] [1 0 5] â–¸ false
        util.isPosAfterSpan [4 0] [1 0 5] â–¸ false
        util.isPosAfterSpan [5 0] [1 0 5] â–¸ true
        util.isPosAfterSpan [6 0] [1 0 5] â–¸ true
        util.isPosAfterSpan [0 1] [1 0 5] â–¸ true
        
    â–¸ isPosBeforeSpan
        
        util.isPosBeforeSpan [0 0] [1 0 3] â–¸ true
        util.isPosBeforeSpan [1 0] [1 0 3] â–¸ false
        util.isPosBeforeSpan [3 1] [1 0 3] â–¸ false
        
    â–¸ isPosInsideSpan
    
        util.isPosInsideSpan [0 0] [1 0 3] â–¸ false
        util.isPosInsideSpan [1 0] [1 0 3] â–¸ true
        util.isPosInsideSpan [2 0] [1 0 3] â–¸ true
        util.isPosInsideSpan [3 0] [1 0 3] â–¸ false
        
    â–¸ nextSpanAfterPos
    
        spans = [[1 0 3] [6 0 8] [2 1 5]]
        
        util.nextSpanAfterPos spans [4 0] â–¸ [6 0 8]
        util.nextSpanAfterPos spans [0 0] â–¸ [1 0 3]
        
        spans = [[0 21 11] [2 22 11] [5 23 11] [7 24 11]] 
        
        util.nextSpanAfterPos spans [11 21] â–¸ [2 22 11]
        util.nextSpanAfterPos spans [11 22] â–¸ [5 23 11]
        util.nextSpanAfterPos spans [11 23] â–¸ [7 24 11]
        util.nextSpanAfterPos spans [11 24] â–¸ [0 21 11]
        
        spans = [[2 1 5] [2 2 5] [2 3 5]]
        
        util.nextSpanAfterPos spans [5 2]   â–¸ [2 3 5]
        util.nextSpanAfterPos spans [5 3]   â–¸ [2 1 5]
        util.nextSpanAfterPos spans [5 1]   â–¸ [2 2 5]
        
        spans = [[1 4 3] [3 4 5]]
        
        util.nextSpanAfterPos spans [0 0] â–¸ [1 4 3]
        util.nextSpanAfterPos spans [3 4] â–¸ [3 4 5]
        util.nextSpanAfterPos spans [5 4] â–¸ [1 4 3]
        
    â–¸ prevSpanBeforePos
    
        spans = [[1 0 3] [6 0 8] [2 1 5]]
        
        util.prevSpanBeforePos spans [0 0] â–¸ [2 1 5]
        util.prevSpanBeforePos spans [1 0] â–¸ [2 1 5]
        util.prevSpanBeforePos spans [2 0] â–¸ [2 1 5]
        util.prevSpanBeforePos spans [3 0] â–¸ [1 0 3]
        util.prevSpanBeforePos spans [4 0] â–¸ [1 0 3]
        util.prevSpanBeforePos spans [6 0] â–¸ [1 0 3]
        util.prevSpanBeforePos spans [7 0] â–¸ [1 0 3]
        util.prevSpanBeforePos spans [9 0] â–¸ [6 0 8]
        util.prevSpanBeforePos spans [0 1] â–¸ [6 0 8]
        
    â–¸ normalizePositions
    
        util.normalizePositions [[0 0] [1 0] [2 0]]     â–¸ [[0 0] [1 0] [2 0]]
        util.normalizePositions [[1 0] [2 0] [0 0]]     â–¸ [[0 0] [1 0] [2 0]]
        util.normalizePositions [[1 0] [2 0] [1 0]]     â–¸ [[1 0] [2 0]]
        util.normalizePositions [[2 2] [3 3] [1 1]]     â–¸ [[1 1] [2 2] [3 3]]
        util.normalizePositions [[2 2] [0 3] [11 1]]    â–¸ [[11 1] [2 2] [0 3]]

    â–¸ lineRangeAtPos
    
        lines = util.seglsForText """
            ðŸŒ¾ðŸ§‘
            """

        util.lineRangeAtPos lines [0 0] â–¸ [0 0 4 0]

    â–¸ seglRangeAtPos
    
        lines = util.seglsForText """
            ðŸ§‘ðŸŒ¾
            """

        util.seglRangeAtPos lines [0 0] â–¸ [0 0 2 0]
        
    â–¸ lineRangesInRange
    
        lines = util.seglsForText """
            1
            
            12
            abc
            """
        
        util.lineRangesInRange lines [0 0 0 2] â–¸ [[0 0 1 0] [0 1 0 1] [0 2 2 2]]
        
    â–¸ splitLineRanges
    
        lines = util.linesForText """
            1
            
            12
            abc
            """

        util.splitLineRanges lines [[0 0 1 2]] â–¸ [[0 0 1 0] [0 1 0 1] [0 2 1 2]]
        util.splitLineRanges lines [[0 2 1 2] [2 2 3 2]] â–¸ [[0 2 1 2] [2 2 3 2]]
        
    â–¸ seglsForText
    
        segls = util.seglsForText """
            123
            456
            
            abc
            def
            """
            
        segls â–¸ [['1' '2' '3'] ['4' '5' '6'] [] ['a' 'b' 'c'] ['d' 'e' 'f']]    
            
        â–¸ seglsForRange
            
            util.seglsForRange segls [0 0 3 4] â–¸ [['1' '2' '3'] ['4' '5' '6'] [] ['a' 'b' 'c'] ['d' 'e' 'f']]
            util.seglsForRange segls [0 0 0 0] â–¸ [[]]
            util.seglsForRange segls [0 0 1 0] â–¸ [['1']]
            util.seglsForRange segls [3 0 0 1] â–¸ [[] []]
            util.seglsForRange segls [3 0 1 1] â–¸ [[] ['4']]
        
    â–¸ rangesForLinePositions 
    
        lines = util.linesForText """
            123
            456
            
            abc
            def
            """
    
        util.rangesForLinePositions lines []      â–¸ []
        util.rangesForLinePositions lines [[0 0]] â–¸ [[0 0 0 0] [0 0 3 4]]
        util.rangesForLinePositions lines [[1 0]] â–¸ [[0 0 1 0] [1 0 3 4]]
        util.rangesForLinePositions lines [[0 2]] â–¸ [[0 0 0 2] [0 2 3 4]]
        
        util.rangesForLinePositions lines [[0 0] [1 0]] â–¸ [[0 0 0 0] [0 0 1 0] [1 0 3 4]]
        util.rangesForLinePositions lines [[3 0] [3 1]] â–¸ [[0 0 3 0] [3 0 3 1] [3 1 3 4]]
        
    # 0000000    00000000  000      00000000  000000000  00000000  000      000  000   000  00000000   0000000  
    # 000   000  000       000      000          000     000       000      000  0000  000  000       000       
    # 000   000  0000000   000      0000000      000     0000000   000      000  000 0 000  0000000   0000000   
    # 000   000  000       000      000          000     000       000      000  000  0000  000            000  
    # 0000000    00000000  0000000  00000000     000     00000000  0000000  000  000   000  00000000  0000000   
    
    â–¸ deleteLineRangesAndAdjustPositions
    
        lines = util.seglsForText """
            1234567890
            abcdefghij
            """
    
        util.deleteLineRangesAndAdjustPositions lines [[5 0 5 0]] [[5 1]] â–¸ [lines [[5 1]]]
        util.deleteLineRangesAndAdjustPositions lines [[5 0 6 0]] [[5 1]] â–¸ [[kseg('123457890') kseg('abcdefghij')] [[5 1]]]
        util.deleteLineRangesAndAdjustPositions lines [[5 0 5 1]] [[5 1]] â–¸ [[kseg('12345fghij')] [[5 0]]]
        util.deleteLineRangesAndAdjustPositions lines [[0 1 1 1]] [[0 1]] â–¸ [[kseg('1234567890') kseg('bcdefghij')] [[0 1]]]
        util.deleteLineRangesAndAdjustPositions lines [[5 0 3 1]] [[3 1]] â–¸ [[kseg('12345defghij')] [[5 0]]]
        util.deleteLineRangesAndAdjustPositions lines [[3 0 5 1]] [[3 1]] â–¸ [[kseg('123fghij')] [[3 0]]]
        
        lines = util.seglsForText """
            line 1
            line 2
            line 3
            """
            
        util.deleteLineRangesAndAdjustPositions lines [[0 0 6 1]] [[6 0] [6 1]] â–¸ [[kseg('line 3')] [[0 0]]]
                
    # 000  000   000   0000000  00000000  00000000   000000000  
    # 000  0000  000  000       000       000   000     000     
    # 000  000 0 000  0000000   0000000   0000000       000     
    # 000  000  0000       000  000       000   000     000     
    # 000  000   000  0000000   00000000  000   000     000     
    
    â–¸ insertTextAtPositions
    
        â–¸ single spans
     
            lines = util.seglsForText 
                """
                line 1
                line 2
                """
             
            util.insertTextAtPositions lines ''       [[0 0]]       â–¸ [kseg.segls('line 1\nline 2') [[0 0]]]
            util.insertTextAtPositions lines 'a '     [[0 0]]       â–¸ [kseg.segls('a line 1\nline 2') [[2 0]]]
            util.insertTextAtPositions lines 'a '     [[0 0] [0 1]] â–¸ [kseg.segls('a line 1\na line 2') [[2 0] [2 1]]]

            util.insertTextAtPositions lines 'x'      [[0 0] [2 0]] â–¸ [kseg.segls('xlixne 1\nline 2') [[1 0] [4 0]]]
            util.insertTextAtPositions lines 'x'      [[0 0] [2 0] [6 0]] â–¸ [kseg.segls('xlixne 1x\nline 2') [[1 0] [4 0] [9 0]]]
            util.insertTextAtPositions lines 'z'      [[0 0] [2 0] [6 0] [1 1] [2 1] [4 1]] â–¸ [kseg.segls('zlizne 1z\nlziznez 2') [[1 0] [4 0] [9 0] [2 1] [4 1] [7 1]]]
            
        â–¸ multiple lines into single cursor
         
            lines = util.seglsForText 
                """
                line 1
                line 2
                """
                 
            util.insertTextAtPositions lines 'a\nb'   [[0 0]]       â–¸ [kseg.segls('a\nb\nline 1\nline 2') [[0 2]]]
            util.insertTextAtPositions lines 'a\nb'   [[2 0]]       â–¸ [kseg.segls('lia\nbne 1\nline 2')   [[1 1]]]
            util.insertTextAtPositions lines 'a\nb'   [[0 1]]       â–¸ [kseg.segls('line 1\na\nb\nline 2') [[0 3]]]

        â–¸ multiple lines into multi cursor
         
            lines = util.seglsForText 
                """
                1234
                5678
                """
                 
            util.insertTextAtPositions lines 'X\nY'      [[0 0] [0 1]]              â–¸ [kseg.segls('X1234\nY5678')   [[1 0] [1 1]]]
            util.insertTextAtPositions lines 'X\nY'      [[0 0] [1 0] [2 0] [3 0]]  â–¸ [kseg.segls('X1Y2X3Y4\n5678') [[1 0] [3 0] [5 0] [7 0]]]
            util.insertTextAtPositions lines '@\n$\n%'   [[0 0] [1 0] [2 0] [3 0]]  â–¸ [kseg.segls('@1$2%3@4\n5678') [[1 0] [3 0] [5 0] [7 0]]]
            
        â–¸ newlines
        
            lines = util.seglsForText 
                """
                line 1
                line 2
                """
                
            util.insertTextAtPositions lines '\n' [[2 0]] â–¸ [kseg.segls('li\nne 1\nline 2') [[0 1]]]
            util.insertTextAtPositions lines '\n' [[6 0]] â–¸ [kseg.segls('line 1\n\nline 2') [[0 1]]]
#                                               
            util.insertTextAtPositions lines '\n' [[0 1]] â–¸ [kseg.segls('line 1\n\nline 2') [[0 2]]]
            util.insertTextAtPositions lines '\n' [[2 1]] â–¸ [kseg.segls('line 1\nli\nne 2') [[0 2]]]
            util.insertTextAtPositions lines '\n' [[6 1]] â–¸ [kseg.segls('line 1\nline 2\n') [[0 2]]]
                                               
            util.insertTextAtPositions lines '\n' [[0 0] [0 1]] â–¸ [kseg.segls('\nline 1\n\nline 2') [[0 1] [0 3]]]
            
            lines = util.seglsForText 
                """ 
                â—†1
                â—†2
                â—†3
                â—†4
                """
            
            util.insertTextAtPositions lines '\n' [[1 0] [1 1] [1 2] [1 3]] â–¸ [kseg.segls('â—†\n1\nâ—†\n2\nâ—†\n3\nâ—†\n4') [[0 1] [0 3] [0 5] [0 7]]]
            
        â–¸ into indented lines
                 
            lines = util.seglsForText
                """ 
                â—†1
                    â—†2
                        â—†3
                """
             
            â–¸ single span 
         
                util.insertTextAtPositions lines '~!' [[4 1]] â–¸ [kseg.segls('â—†1\n    ~!â—†2\n        â—†3') [[6 1]]]
                util.insertTextAtPositions lines '#{' [[2 2]] â–¸ [kseg.segls('â—†1\n    â—†2\n  #{      â—†3') [[4 2]]]
                 
            â–¸ newline into single cursor
     
                util.insertTextAtPositions lines '\n' [[4 1]] â–¸ [kseg.segls('â—†1\n    \n    â—†2\n        â—†3') [[4 2]]]
             
            â–¸ multiple lines into single cursor
             
                # util.insertTextAtPositions lines 'a\nb' [[4 1]] â–¸ [kseg.segls('â—†1\n    a\n    b\n    â—†2\n        â—†3') [[4 3]]]
        
    # 00     00   0000000   000   000  00000000  000      000  000   000  00000000   0000000  
    # 000   000  000   000  000   000  000       000      000  0000  000  000       000       
    # 000000000  000   000   000 000   0000000   000      000  000 0 000  0000000   0000000   
    # 000 0 000  000   000     000     000       000      000  000  0000  000            000  
    # 000   000   0000000       0      00000000  0000000  000  000   000  00000000  0000000   
    
    â–¸ moveLineRangesAndPositionsAtIndicesInDirection
    
        lines = ['a' 'b' 'c']
    
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [1] 'down' â–¸ [['a' 'c' 'b'] [] []]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [2] 'down' â–¸ [['a' 'b' 'c'] [] []]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [1 2] 'down' â–¸ [['a' 'b' 'c'] [] []]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [0 2] 'down' â–¸ [['a' 'b' 'c'] [] []]

        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [1] 'up' â–¸ [['b' 'a' 'c'] [] []]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [2] 'up' â–¸ [['a' 'c' 'b'] [] []]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [1 2] 'up' â–¸ [['b' 'c' 'a'] [] []]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [] [0 2] 'up' â–¸ [['a' 'b' 'c'] [] []]

        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1]] [1] 'down' â–¸ [['a' 'c' 'b'] [] [[0 2]]]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1] [1 1]] [1] 'down' â–¸ [['a' 'c' 'b'] [] [[0 2] [1 2]]]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1] [1 1]] [1] 'down' â–¸ [['a' 'c' 'b'] [] [[0 2] [1 2]]]

        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1]] [1] 'up' â–¸ [['b' 'a' 'c'] [] [[0 0]]]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1] [1 1]] [1] 'up' â–¸ [['b' 'a' 'c'] [] [[0 0] [1 0]]]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1] [1 1]] [1] 'up' â–¸ [['b' 'a' 'c'] [] [[0 0] [1 0]]]
        
        lines = ['a' 'b' 'c' 'd' 'e']
        
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1] [0 2] [0 3]] [1 2 3] 'up' â–¸ [['b' 'c' 'd' 'a' 'e'] [] [[0 0] [0 1] [0 2]]]
        util.moveLineRangesAndPositionsAtIndicesInDirection lines [] [[0 1] [0 2] [0 3]] [1 2 3] 'down' â–¸ [['a' 'e' 'b' 'c' 'd'] [] [[0 2] [0 3] [0 4]]]
        
        