###
 0000000   0000000  00000000    0000000   000      000    
000       000       000   000  000   000  000      000    
0000000   000       0000000    000   000  000      000    
     000  000       000   000  000   000  000      000    
0000000    0000000  000   000   0000000   0000000  0000000
###

use ../../kxk ▪ post
use ..        ◆ theme 
use           ◆ view

{floor, pow} = Math

function scroll extends view

    @: screen @state -> 
    
        super screen @state.owner() + '.scroll'
        
        if @name == 'editor.scroll' # future me hate?
            @handle = '▌' ; @bg = theme.gutter
        else
            @handle = '┃' ; @bg = theme.editor 
    
    # 00     00   0000000   000   000   0000000  00000000  
    # 000   000  000   000  000   000  000       000       
    # 000000000  000   000  000   000  0000000   0000000   
    # 000 0 000  000   000  000   000       000  000       
    # 000   000   0000000    0000000   0000000   00000000  
    
    onMouse: event =>
        
        [col row] = @cells.posForEvent event
        @hover = @cells.isInsideEvent event
        
        switch event.type
            
            'press'
            
                if @hover
                    @doDrag = true
                    post.emit 'pointer''grabbing' 
                    ⮐ @scrollTo row
                    
            'drag'
            
                if @doDrag
                    @hover = true
                    post.emit 'pointer''grab' 
                    ⮐ @scrollTo row 
                else
                    @hover = false
                
            'release'
            
                if @doDrag
                    post.emit 'pointer''pointer' 
                    delete @doDrag 
                    ⮐ true
                    
            'move'
            
                post.emit 'pointer''pointer' if @hover
            
        false
        
    #  0000000   0000000  00000000    0000000   000      000      000000000   0000000   
    # 000       000       000   000  000   000  000      000         000     000   000  
    # 0000000   000       0000000    000   000  000      000         000     000   000  
    #      000  000       000   000  000   000  000      000         000     000   000  
    # 0000000    0000000  000   000   0000000   0000000  0000000     000      0000000   
    
    scrollTo: row =>
        
        view = @state.s.view.asMutable()
        
        view[1] = parseInt floor(row * (@state.s.lines.length - @cells.rows + 1)  / (@cells.rows-1))
        
        maxY = @state.s.lines.length - @cells.rows
        
        view[1] = min maxY view[1] if maxY > 0
        view[1] = max 0 view[1]
        
        @state.setView view
        
        true
        
    # 0000000    00000000    0000000   000   000  
    # 000   000  000   000  000   000  000 0 000  
    # 000   000  0000000    000000000  000000000  
    # 000   000  000   000  000   000  000   000  
    # 0000000    000   000  000   000  00     00  
    
    draw: =>
        
        rows = @cells.rows
        lnum = @state.s.lines.length
        
        kh = parseInt floor(pow((rows) 2) / lnum)
        kp = parseInt floor((rows-kh-1) * @state.s.view[1] / (lnum-rows))
        nc = parseInt floor((rows-1)    * @state.s.view[1] / (lnum-rows))
        ns = kp
        ne = kp+kh
        
        for row in 0...rows

            fg = @bg

            if       
                lnum < rows     ➜
                row == nc       ➜ fg = @hover ? theme.scroll_doth : theme.scroll_dot
                ns <= row <= ne ➜ fg = @hover ? theme.scroll_knob : theme.scroll
                
            @cells.set 0 row @handle fg @bg

export scroll
