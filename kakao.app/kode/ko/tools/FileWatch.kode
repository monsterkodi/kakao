###
000   000   0000000   000000000   0000000  000   000  00000000  00000000 
000 0 000  000   000     000     000       000   000  000       000   000
000000000  000000000     000     000       000000000  0000000   0000000  
000   000  000   000     000     000       000   000  000       000   000
00     00  000   000     000      0000000  000   000  00000000  000   000
###

use ../../kxk/slash
use ../../kxk/post

# 00000000  000  000      00000000  000   000   0000000   000000000   0000000  000   000  
# 000       000  000      000       000 0 000  000   000     000     000       000   000  
# 000000    000  000      0000000   000000000  000000000     000     000       000000000  
# 000       000  000      000       000   000  000   000     000     000       000   000  
# 000       000  0000000  00000000  00     00  000   000     000      0000000  000   000  

class FileWatch
    
    @: ->
        
        @watchers = {}
        post.on 'fs.change' @onChange
        post.on 'watch'     @onWatch
        post.on 'unwatch'   @onUnwatch
        
    onWatch: (file) =>
        
        file = slash.untilde slash.path file
        
        @watchers[file] ?= 0
        @watchers[file]++
        
        # log 'onWatch' @watchers
                
    onUnwatch: (file) =>

        file = slash.untilde slash.path file
        
        if @watchers[file]?
            @watchers[file]--
            if @watchers[file] <= 0
                delete @watchers[file]
            
        # log 'onUnwatch' @watchers
        
    onChange: (change, path) =>
        
        for k,v of @watchers
            if k == path
                # log 'watchers' @watchers
                log 'filewatch!' change, path
                switch change
                    'deleted' ➜ post.emit 'removeFile' path
                    'changed' ➜ post.emit 'reloadFile' path
                return
        
export FileWatch
