###
    ███  ███   ███  ████████   ███   ███  █████████ 
    ███  ████  ███  ███   ███  ███   ███     ███    
    ███  ███ █ ███  ████████   ███   ███     ███    
    ███  ███  ████  ███        ███   ███     ███    
    ███  ███   ███  ███         ███████      ███    

    simple text input field
    used in inputchoice to filter choices
###

use ../../../kxk ▪ kseg
use ../../theme  ◆ theme
use ../../edit   ◆ editor

function input extends editor

    @: screen name ->
        
        super screen name ['brckts' 'replex' 'unype']
        
        @setColor 'selection_line'  @color.selection
        @setColor 'bg'              theme.quicky.bg
        @setColor 'bg_blur'         theme.quicky.bg
        @setColor 'bg_focus'        theme.editor.bg
        
    hasFocus: -> @state.hasFocus

    current:  => kseg.str @state.s.lines[0]

    set: text ->
    
        @state.loadLines [text]

    selectAll: -> 
    
        @state.selectLine 0
        @state.moveCursors 'eol'

    onKey: key event ->
        
        switch event.combo
            
            'return'    
                
                @emit 'action' 'submit' @current()
                ⮐  true
                
            'up' 'down'
                
                @emit 'action' event.combo 
                ⮐  false
                
            'right'
                
                if @state.mainCursor()[0] >= @current().length
                    @emit 'action' 'right'
                    ⮐  true

        before = @current()

        sr = super key event
        
        if before != @current()
            @emit 'action' 'change' @current() 
            ⮐  true
        
        sr
        
    draw: ->
        
        ⮐  if @hidden()
        
        @setColor 'bg' @hasFocus() ? @color.bg_focus : @color.bg_blur
        @setColor 'empty' @color.bg
        
        # @cells.fill_rect 0 0 -1 -1 ' ' null @color.bg
        
        super()

export input
