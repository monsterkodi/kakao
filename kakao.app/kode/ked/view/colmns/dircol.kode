###
    ███████    ███  ████████    ███████   ███████   ███      
    ███   ███  ███  ███   ███  ███       ███   ███  ███      
    ███   ███  ███  ███████    ███       ███   ███  ███      
    ███   ███  ███  ███   ███  ███       ███   ███  ███      
    ███████    ███  ███   ███   ███████   ███████   ███████  
###

use ../../../kxk ▪ post slash
use ../../theme  ◆ color theme
use ../base      ◆ view knob crumbs
use ../menu      ◆ context
use              ◆ dirtree

function dircol extends view

    @: screen name features ->
        
        super screen name features
        
        @isVisible = false
        @active    = true
        
        @pointerType = 'pointer'
        
        @knob    = new knob    screen "#{@name}_knob"
        @crumbs  = new crumbs  screen "#{@name}_crumbs"
        @dirtree = new dirtree screen "#{@name}_dirtree" ['scroll']
        
        @crumbs.on 'action' @onCrumbsAction
        
        @dirtree.setColor 'bg'            theme.dirtree.bg
        @dirtree.setColor 'empty'         @dirtree.color.bg
        @dirtree.setColor 'cursor_main'   @dirtree.color.bg
        @dirtree.setColor 'cursor_empty'  @dirtree.color.bg
        
        @dirtree.scroll.setColor 'bg'     @dirtree.color.bg
        
        @knob   .setColor 'bg'            @dirtree.color.bg
        
        @crumbs .setColor 'empty'         theme.gutter.bg
        
        post.on 'dircol.resize' @onDircolResize
        post.on 'dircol.toggle' @onDircolToggle
        post.on 'dircol.root'   @setRoot
        
        post.on 'session.merge' @onSessionMerge
        
        root = ked_session.get 'dircol▸root' process.cwd()
        
        @setRoot root
        
    onCrumbsAction: action path =>

        if action == 'click'
            @setRoot path
            
    onSessionMerge: recent =>
        
        ⮐  if empty recent.dircol
        
        args = ked_session.get 'ked▸args' {}
        if valid args.options
            log "dircol.onSessionMerge - use first options dir #{slash.dir args.options[0]}"
            root = slash.dir args.options[0]
        else
            log "dircol.onSessionMerge - use last session dir #{recent.dircol.root}"
            root = recent.dircol.root
        
        if root
            @setRoot root
            
        @active = recent.dircol.active
        @show() if @active
            
        ked_session.set 'dircol' recent.dircol
            
    setRoot: path =>
    
        ⮐  if empty path
    
        path = slash.tilde path
        @crumbs.set path
        @dirtree.setRoot path redraw:true
        
        ked_session.set 'dircol▸root' path
        
    layout: x y w h =>
        
        @crumbs.layout  x     y   w   1
        @dirtree.layout x     y+1 w h-1
        @knob.layout    x+w-1 y+1 1 h-1
        
        super x y w h
        
    draw: =>
        
        ⮐  if @hidden() or @collapsed() or not @active
        
        @cells.fill_rect 0 1 -1 -1 ' ' null theme.dirtree.bg
        @cells.fill_rect 0 0 -1  0 ' ' null theme.gutter.bg
        
        @crumbs.draw()
        @dirtree.draw()
        @knob.draw()
    
        super()
        
    #  ███████   ███████   ███   ███  █████████  ████████  ███   ███  █████████
    # ███       ███   ███  ████  ███     ███     ███        ███ ███      ███   
    # ███       ███   ███  ███ █ ███     ███     ███████     █████       ███   
    # ███       ███   ███  ███  ████     ███     ███        ███ ███      ███   
    #  ███████   ███████   ███   ███     ███     ████████  ███   ███     ███   

    onContext: event =>
    
        context.show event.cell @onContextChoice [
            "trash" 
            ]
                
    onContextChoice: choice =>
    
        if current = @dirtree.current()

            switch choice
                'trash' ➜ post.emit 'file.trash' current.path
    
    # █████████   ███████    ███████    ███████   ███      ████████
    #    ███     ███   ███  ███        ███        ███      ███     
    #    ███     ███   ███  ███  ████  ███  ████  ███      ███████ 
    #    ███     ███   ███  ███   ███  ███   ███  ███      ███     
    #    ███      ███████    ███████    ███████   ███████  ████████

    onDircolResize: => @knob.doDrag = true
    onDircolToggle: => 
        
        @toggle() if not (@visible() and @collapsed())
        @active = @visible()
        ked_session.set 'dircol▸active' @active
        cols = max 16 int(@cells.screen.cols / 6)
        post.emit 'view.size' @name 'right' (@hidden() ? -@cells.cols : cols-@cells.cols )
        
    # 00     00   0000000   000   000   0000000  00000000  
    # 000   000  000   000  000   000  000       000       
    # 000000000  000   000  000   000  0000000   0000000   
    # 000 0 000  000   000  000   000       000  000       
    # 000   000   0000000    0000000   0000000   00000000  

    onMouse: event =>
    
        ⮐  if @hidden() or @collapsed() or not @active
        
        ret = super event            ; ⮐  ret if ret?.redraw
        ret = @knob.onMouse event    ; ⮐  ret if ret?.redraw
        ret = @crumbs.onMouse event  ; ⮐  ret if ret?.redraw
        ret = @dirtree.onMouse event ; ⮐  ret if ret?.redraw
        
    # 000   000  000   000  00000000  00000000  000      
    # 000 0 000  000   000  000       000       000      
    # 000000000  000000000  0000000   0000000   000      
    # 000   000  000   000  000       000       000      
    # 00     00  000   000  00000000  00000000  0000000  
    
    onWheel: event =>
        
        ⮐  if @hidden() or @collapsed() or not @active
        
        @dirtree.onWheel event
        
    # 000   000  00000000  000   000  
    # 000  000   000        000 000   
    # 0000000    0000000     00000    
    # 000  000   000          000     
    # 000   000  00000000     000     
    
    onKey: key event =>
        
        ⮐  if not @dirtree.hasFocus()
        
        switch key
        
            'cmd+left'
            'ctrl+left' ➜ ⮐  @setRoot slash.dir(@dirtree.currentRoot)
            
        @dirtree.onKey key event

export dircol
