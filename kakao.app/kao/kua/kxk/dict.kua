###
    ███████    ███   ███████  █████████
    ███   ███  ███  ███          ███   
    ███   ███  ███  ███          ███   
    ███   ███  ███  ███          ███   
    ███████    ███   ███████     ███   
###

class dict

    @iskey: k -> type(k) == "string" and k != "class" and string.sub(k 1 2) != "__"
    
    @iter: d ->
    
        if d.class == immutable ➜ ⮐  dict.iter d.__data
        
        k = nil
        -> 
            k = next(d k)
            while k and (type(@[k]) == "function" or not dict.iskey(k))
                k = next(d k)
            (k d[k])

    @size: d ->
    
        s = 0
        for _ in dict.iter d
            s += 1
        s
    
    @str: d -> noon(d)
    
    @keys: d ->
    
        a = []
        for k _ in dict.iter d
            a∙push k
        a

    @values: d ->
    
        a = []
        for _ v in dict.iter d
            a∙push v
        a
    
    @isdict: d ->
    
        d.len <= 0 and dict.size(d) >= 1 and d.class != array

⮐  dict