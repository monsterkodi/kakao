###
 0000000   0000000  00000000    0000000   000      000    
000       000       000   000  000   000  000      000    
0000000   000       0000000    000   000  000      000    
     000  000       000   000  000   000  000      000    
0000000    0000000  000   000   0000000   0000000  0000000
###

use ◆ color

function scroll

    @: @cells @state ->
        
    setHover: @hover =>
        
    draw: =>
        
        kh = parseInt Math.floor(Math.pow((@cells.t.rows() - 1) 2) / @state.s.lines.length)
        kp = parseInt Math.floor((@cells.t.rows()-kh-2) * @state.s.view[1] / (@state.s.lines.length - @cells.t.rows() + 1 ))
        nc = parseInt Math.floor((@cells.t.rows()-1) * @state.s.view[1] / (@state.s.lines.length - @cells.t.rows() + 2))
        nc = parseInt Math.floor((@cells.t.rows()-2) * @state.s.view[1] / (@state.s.lines.length - @cells.t.rows() + 1))
        ns = kp
        ne = kp+kh
        
        lf.write "#{ns} #{nc} #{ne}"
        
        for row in 0...@cells.t.rows()-1
            
            bg = if
                row == nc ➜ @hover ? color.scroll_doth : color.scroll_dot
                ns <= row <= ne ➜ @hover ? color.scroll_knob : color.scroll
                @hover ➜ color.scroll
                       ➜ color.gutter
                        
            @cells.c[row][0].bg = bg
            @cells.c[row][0].char = ' '

export scroll
