###
    000   000   0000000   000   000   0000000    0000000 
    000  000   000   000  000  000   000   000  000   000
    0000000    000000000  0000000    000000000  000   000
    000  000   000   000  000  000   000   000  000   000
    000   000  000   000  000   000  000   000   0000000 

    handles application initialization
    handles sending and receiving messages to/from the application process
    provides shortcuts to useful internal modules
    sets itself in the global window scope
###

use ./bundle
use ./kxk/kxk

function Kakao

    # initialization of the application

    @init: (cb) â—‹->
        
        # request the bundle url (toplevel .app folder of the application)
        # without it, the window can't load any resources (menu, icon ...)
        
        Kakao.request('bundle.path').then (bundlePath) ->
        
            bundle.path = bundlePath # forward the path to the bundle module
            cb bundlePath            # ... the application is ready to run

    # sends a message (fire and forget) to the application process with optional args.
    
    @send: (route, args...) ->
        
        window.webkit.messageHandlers.kakao.postMessage route:route, args:args

    # sends a message to the application process. returns a promise for the result value. 
    
    @request: (route, args...) ->

        window.webkit.messageHandlers.kakao_request.postMessage route:route, args:args
        
    # receives a message from the application process and posts it in this window
        
    @receive: (msg) ->
        
        kxk.post.emit msg
            
    # some redirections to make working with kakao modules a little simpler ...
            
    @bundle: bundle      # provides paths and urls relative to the application folder
    @window: kxk.win     # base class for kakao windows
    @dom:    kxk.dom     # dom expection and manipulation
    @post:   kxk.post    # posts messages to modules in the window process
    @fs:     kxk.fs      # fake fs

window.kakao = Kakao # kakao sets itself in the global window scope

window.process = 
    env:
        home:   'sweet/home'
        tmpdir: '/tmp'
        user:   'kakao_user'

export Kakao
