
use kxk.kxk
use ked

love.load = ->

    _G.fontWidth = 12
    _G.fontSize  = fontWidth*2
    _G.fontStep  = fontWidth+2
    _G.font  = love.graphics.setNewFont "font.ttf" fontSize
    _G.count = 0
    #love.window.maximize()
    
    love.keyboard.setKeyRepeat true
    
    _G.ked = ked()
    
    nil

love.draw = ->

    count += 1
    (_ _ w h) = love.window.getSafeArea()
    
    scale = love.window.getDPIScale()
    
    love.graphics.setColor 0.1 0.1 0.1 
    
    ox = math.ceil((w-math.floor(w/fontStep)*fontStep)/2)
    oy = math.floor((h-math.floor(h/fontSize)*fontSize)/4)
    
    cols = math.floor w/fontStep
    rows = math.floor h/fontSize

    love.graphics.setColor 0.2 0.2 0.2 
    love.graphics.print "#{cols} #{rows} #{w} #{h} #{scale} #{count} #{love.timer.getFPS()} ◂" 2*fontStep h-fontSize*2
    
    ked∙draw cols rows ox oy fontStep fontSize
    
    nil
    
love.quit = ->

    ked∙quit()
    false
    
love.keypressed = key scancode isrepeat ->

    mods = ""
    switch key 
        "lshift" "rshift"
        "lctrl"  "rctrl"
        "lalt"   "ralt"
        "lgui"   "rgui"
            ⮐  
    if love.keyboard.isDown('lshift') or love.keyboard.isDown('rshift')
        mods &= "shift+"
    if love.keyboard.isDown('lctrl') or love.keyboard.isDown('rctrl')
        mods &= "ctrl+"
    if love.keyboard.isDown('lalt') or love.keyboard.isDown('ralt')
        mods &= "alt+"
    if love.keyboard.isDown('lgui') or love.keyboard.isDown('rgui')
        mods &= "cmd+"
    log 'keypressed ' mods, key
    combo = mods & key
    char = ""
    switch key
        "return" ➜ char = "\n"
        "space" ➜ char = " "
    event = { "repeat": isrepeat combo: combo char: char}
    ked∙onKey combo, event
    true
    
# love.keyreleased = key scancode ->
# 
#     log 'keyreleased ' key, " " scancode
